{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "subscriptionId",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "gasLane", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "callbackGasLimit",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "vrfCoordinatorV2",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_usdtToken", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "Draw",
      "inputs": [
        { "name": "lotteryId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "GetLatestLottery",
      "inputs": [
        {
          "name": "_type",
          "type": "uint8",
          "internalType": "enum Lottery.LotteryType"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Lottery.LotteryRound",
          "components": [
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            { "name": "roundId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "createdAt",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "lotteryType",
              "type": "uint8",
              "internalType": "enum Lottery.LotteryType"
            },
            {
              "name": "minTicketCount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxTicketCount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "ticketPrice",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "prizesAndWinners",
              "type": "tuple[3]",
              "internalType": "struct Lottery.WinnerPrize[3]",
              "components": [
                {
                  "name": "prizeAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "winnerCount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWinners",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "isActive", "type": "bool", "internalType": "bool" },
            {
              "name": "tickets",
              "type": "tuple[]",
              "internalType": "struct Lottery.Ticket[]",
              "components": [
                {
                  "name": "customer",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "timestamp",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "ticketString",
                  "type": "bytes12",
                  "internalType": "bytes12"
                }
              ]
            },
            { "name": "winners", "type": "uint8[]", "internalType": "uint8[]" },
            {
              "name": "winningTicketNumbers",
              "type": "uint16[]",
              "internalType": "uint16[]"
            },
            { "name": "isDistributed", "type": "bool", "internalType": "bool" },
            {
              "name": "totalticketPurchased",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "uniqeUserCount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GetLatestLotteryTicketRoundCustomerCount",
      "inputs": [
        {
          "name": "_type",
          "type": "uint8",
          "internalType": "enum Lottery.LotteryType"
        }
      ],
      "outputs": [
        { "name": "round", "type": "uint256", "internalType": "uint256" },
        { "name": "ticketCount", "type": "uint256", "internalType": "uint256" },
        {
          "name": "customerCount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GetLotteryById",
      "inputs": [
        { "name": "lotteryId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Lottery.LotteryRound",
          "components": [
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            { "name": "roundId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "createdAt",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "lotteryType",
              "type": "uint8",
              "internalType": "enum Lottery.LotteryType"
            },
            {
              "name": "minTicketCount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxTicketCount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "ticketPrice",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "prizesAndWinners",
              "type": "tuple[3]",
              "internalType": "struct Lottery.WinnerPrize[3]",
              "components": [
                {
                  "name": "prizeAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "winnerCount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWinners",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "isActive", "type": "bool", "internalType": "bool" },
            {
              "name": "tickets",
              "type": "tuple[]",
              "internalType": "struct Lottery.Ticket[]",
              "components": [
                {
                  "name": "customer",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "timestamp",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "ticketString",
                  "type": "bytes12",
                  "internalType": "bytes12"
                }
              ]
            },
            { "name": "winners", "type": "uint8[]", "internalType": "uint8[]" },
            {
              "name": "winningTicketNumbers",
              "type": "uint16[]",
              "internalType": "uint16[]"
            },
            { "name": "isDistributed", "type": "bool", "internalType": "bool" },
            {
              "name": "totalticketPurchased",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "uniqeUserCount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GetLotteryCount",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "GetPremiumAccount",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Lottery.User",
          "components": [
            { "name": "premium", "type": "uint256", "internalType": "uint256" },
            {
              "name": "firstLottery",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "lastTicketPurchased",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "totalPurchaseTicketCost",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "directReferress",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "totalEarning",
              "type": "tuple",
              "internalType": "struct Lottery.totalEarning",
              "components": [
                {
                  "name": "refTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumReferralTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "topBuyerTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "winningAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "availableTax",
              "type": "tuple",
              "internalType": "struct Lottery.AvaileableUserTax",
              "components": [
                {
                  "name": "refTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumReferralTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "topBuyerTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "winningAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "purchasedTickets",
              "type": "tuple",
              "internalType": "struct Lottery.PurchasedTickets",
              "components": [
                {
                  "name": "topBuyerTickets",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "topBuyerCost",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "refTickets",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "PerformDraw",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "WithDrawRewardBaalance",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "acceptOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addPremiumAccount",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addPremiumAccountWithReferral",
      "inputs": [
        { "name": "referral", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "chainLinkRandomWords",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "changeOperator",
      "inputs": [
        { "name": "_operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createLottery",
      "inputs": [
        {
          "name": "_type",
          "type": "uint8",
          "internalType": "enum Lottery.LotteryType"
        },
        {
          "name": "_minTicketCount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_maxTicketCount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_prizeAmounts",
          "type": "uint256[3]",
          "internalType": "uint256[3]"
        },
        {
          "name": "_winnerCounts",
          "type": "uint256[3]",
          "internalType": "uint256[3]"
        },
        {
          "name": "_totalWinners",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "distributeTopBuyersAmounts",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getLotteryWinningAmountByUser",
      "inputs": [
        { "name": "userAddress", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOwnerBalance",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPremiumReserve",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct Lottery.PremiumUsers[]",
          "components": [
            { "name": "user", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPremiumRewardBalance",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTopBuyerList",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct Lottery.Leader[]",
          "components": [
            { "name": "user", "type": "address", "internalType": "address" },
            { "name": "ticket", "type": "uint256", "internalType": "uint256" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUser",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Lottery.User",
          "components": [
            { "name": "premium", "type": "uint256", "internalType": "uint256" },
            {
              "name": "firstLottery",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "lastTicketPurchased",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "totalPurchaseTicketCost",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "directReferress",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "totalEarning",
              "type": "tuple",
              "internalType": "struct Lottery.totalEarning",
              "components": [
                {
                  "name": "refTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumReferralTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "topBuyerTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "winningAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "availableTax",
              "type": "tuple",
              "internalType": "struct Lottery.AvaileableUserTax",
              "components": [
                {
                  "name": "refTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumReferralTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "topBuyerTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "winningAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "purchasedTickets",
              "type": "tuple",
              "internalType": "struct Lottery.PurchasedTickets",
              "components": [
                {
                  "name": "topBuyerTickets",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "topBuyerCost",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "refTickets",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWinnersList",
      "inputs": [
        { "name": "lottteryId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct Lottery.LotteryResult[]",
          "components": [
            { "name": "sl", "type": "uint16", "internalType": "uint16" },
            { "name": "ticket", "type": "bytes12", "internalType": "bytes12" },
            { "name": "user", "type": "address", "internalType": "address" },
            { "name": "prize", "type": "uint8", "internalType": "uint8" }
          ]
        },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum Lottery.LotteryType"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isActiveUser",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotteries",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "roundId", "type": "uint256", "internalType": "uint256" },
        { "name": "createdAt", "type": "uint256", "internalType": "uint256" },
        {
          "name": "lotteryType",
          "type": "uint8",
          "internalType": "enum Lottery.LotteryType"
        },
        {
          "name": "minTicketCount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "maxTicketCount",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "ticketPrice", "type": "uint256", "internalType": "uint256" },
        {
          "name": "totalWinners",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "isActive", "type": "bool", "internalType": "bool" },
        { "name": "isDistributed", "type": "bool", "internalType": "bool" },
        {
          "name": "totalticketPurchased",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "uniqeUserCount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "premiumUserList",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "purchaseTicket",
      "inputs": [
        { "name": "lotteryId", "type": "uint256", "internalType": "uint256" },
        { "name": "ticketCount", "type": "uint256", "internalType": "uint256" },
        { "name": "referrer", "type": "address", "internalType": "address" },
        {
          "name": "ticketStrings",
          "type": "bytes12[]",
          "internalType": "bytes12[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rawFulfillRandomWords",
      "inputs": [
        { "name": "requestId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "randomWords",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removePremiumAccount",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "s_vrfCoordinator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IVRFCoordinatorV2Plus"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setCoordinator",
      "inputs": [
        {
          "name": "_vrfCoordinator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "topBuyerAmount",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "usdtToken",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "users",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [
        { "name": "premium", "type": "uint256", "internalType": "uint256" },
        {
          "name": "firstLottery",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "lastTicketPurchased",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalPurchaseTicketCost",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "referrer", "type": "address", "internalType": "address" },
        {
          "name": "totalEarning",
          "type": "tuple",
          "internalType": "struct Lottery.totalEarning",
          "components": [
            { "name": "refTax", "type": "uint256", "internalType": "uint256" },
            {
              "name": "premiumTax",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "premiumReferralTax",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "topBuyerTax",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "winningAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "availableTax",
          "type": "tuple",
          "internalType": "struct Lottery.AvaileableUserTax",
          "components": [
            { "name": "refTax", "type": "uint256", "internalType": "uint256" },
            {
              "name": "premiumTax",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "premiumReferralTax",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "topBuyerTax",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "winningAmount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        },
        {
          "name": "purchasedTickets",
          "type": "tuple",
          "internalType": "struct Lottery.PurchasedTickets",
          "components": [
            {
              "name": "topBuyerTickets",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "topBuyerCost",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "refTickets",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdrawAmountByOwner",
      "inputs": [
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawOwnerPersonalBalance",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "CoordinatorSet",
      "inputs": [
        {
          "name": "vrfCoordinator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Lottery_Created",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Lottery_RequestForWinners",
      "inputs": [
        {
          "name": "requestId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Lottery_WinnersSelected",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferRequested",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Premium__UserAdded",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Premium__UserRemoved",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "REFFERELS__Added",
      "inputs": [
        {
          "name": "referee",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Ticket__Purchased",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WiinerAddress",
      "inputs": [
        {
          "name": "",
          "type": "uint256[][]",
          "indexed": false,
          "internalType": "uint256[][]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "lotteryTestEvent",
      "inputs": [
        {
          "name": "user",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Lottery.User",
          "components": [
            { "name": "premium", "type": "uint256", "internalType": "uint256" },
            {
              "name": "firstLottery",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "lastTicketPurchased",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "totalPurchaseTicketCost",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "referrer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "directReferress",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "totalEarning",
              "type": "tuple",
              "internalType": "struct Lottery.totalEarning",
              "components": [
                {
                  "name": "refTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumReferralTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "topBuyerTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "winningAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "availableTax",
              "type": "tuple",
              "internalType": "struct Lottery.AvaileableUserTax",
              "components": [
                {
                  "name": "refTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "premiumReferralTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "topBuyerTax",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "winningAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "purchasedTickets",
              "type": "tuple",
              "internalType": "struct Lottery.PurchasedTickets",
              "components": [
                {
                  "name": "topBuyerTickets",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "topBuyerCost",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "refTickets",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "withdrawAmount__SuccessFull",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "Lottery__InvalidTicketStringsLength",
      "inputs": []
    },
    { "type": "error", "name": "Lottery__IsActive", "inputs": [] },
    {
      "type": "error",
      "name": "Lottery__NotEnoughTicketPurchases",
      "inputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }]
    },
    { "type": "error", "name": "Lottery__OnlyOperatorCanCall", "inputs": [] },
    { "type": "error", "name": "Lottery__OnlyOwnerCanCall", "inputs": [] },
    { "type": "error", "name": "Lottery__SoldOut", "inputs": [] },
    {
      "type": "error",
      "name": "Lottery__failedToGenerateRandomNumbers",
      "inputs": []
    },
    { "type": "error", "name": "Lottery__notActive", "inputs": [] },
    { "type": "error", "name": "Lottery__notEnoughMoney", "inputs": [] },
    {
      "type": "error",
      "name": "Lottery__notFound",
      "inputs": [{ "name": "", "type": "string", "internalType": "string" }]
    },
    {
      "type": "error",
      "name": "Lottery__otherLotteryIsActive",
      "inputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Lottery.LotteryRound",
          "components": [
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            { "name": "roundId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "createdAt",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "lotteryType",
              "type": "uint8",
              "internalType": "enum Lottery.LotteryType"
            },
            {
              "name": "minTicketCount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxTicketCount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "ticketPrice",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "prizesAndWinners",
              "type": "tuple[3]",
              "internalType": "struct Lottery.WinnerPrize[3]",
              "components": [
                {
                  "name": "prizeAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "winnerCount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "totalWinners",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "isActive", "type": "bool", "internalType": "bool" },
            {
              "name": "tickets",
              "type": "tuple[]",
              "internalType": "struct Lottery.Ticket[]",
              "components": [
                {
                  "name": "customer",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "timestamp",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "ticketString",
                  "type": "bytes12",
                  "internalType": "bytes12"
                }
              ]
            },
            { "name": "winners", "type": "uint8[]", "internalType": "uint8[]" },
            {
              "name": "winningTicketNumbers",
              "type": "uint16[]",
              "internalType": "uint16[]"
            },
            { "name": "isDistributed", "type": "bool", "internalType": "bool" },
            {
              "name": "totalticketPurchased",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "uniqeUserCount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ]
    },
    {
      "type": "error",
      "name": "OnlyCoordinatorCanFulfill",
      "inputs": [
        { "name": "have", "type": "address", "internalType": "address" },
        { "name": "want", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OnlyOwnerOrCoordinator",
      "inputs": [
        { "name": "have", "type": "address", "internalType": "address" },
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "coordinator", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "Premium__UserAlreadyExist", "inputs": [] },
    {
      "type": "error",
      "name": "Premium__UserDoesNotExist",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }]
    },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "ZeroAddress", "inputs": [] },
    { "type": "error", "name": "withdrawAmount__NotEnoughMoney", "inputs": [] },
    { "type": "error", "name": "withdrawAmount__failed", "inputs": [] }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "5558:29:41:-:0;;;-1:-1:-1;;5843:27:41;;;;;-1:-1:-1;5586:1:41;5898:24;6329:46;1020:41522;6329:46;6365:3;1020:41522;6329:46;;;6370:4;5558:29;6329:46;;;;;5688:31;6329:46;:::i;:::-;;6443:1;6423:21;;6471:1;6450:22;;6510:1;6479:32;;6803:1;6771:33;;6868:19;6837:50;;6956:19;6926:49;;7055:4;7014:45;;9067:457;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9270:16;6254:10:3;;373:1:0;6254:10:3;590:59:1;;;;-1:-1:-1;;;590:59:1;;977:2:42;590:59:1;;;959:21:42;1016:2;996:18;;;989:30;1055:26;1035:18;;;1028:54;1099:18;;590:59:1;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:1;-1:-1:-1;;;;;656:18:1;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;-1:-1:-1;;;;;;;;6276:29:3;::::1;6272:70;;6322:13;;-1:-1:-1::0;;;6322:13:3::1;;;;;;;;;;;6272:70;6347:16;:57:::0;;-1:-1:-1;;;;;6347:57:3;;::::1;-1:-1:-1::0;;;;;;6347:57:3;;::::1;;::::0;;;;2061:7:36;:21;9298:19:41::1;::::0;;;;9327:33:::1;::::0;;;;9370:37:::1;::::0;;::::1;;::::0;-1:-1:-1;9418:9:41::1;:22:::0;;;;;::::1;::::0;;::::1;;::::0;;;9468:5:::1;:18:::0;;;::::1;9476:10;9468:18:::0;;::::1;::::0;;;9496:8:::1;:21:::0;;;;::::1;;::::0;;1020:41522;;1536:239:1;1655:10;-1:-1:-1;;;;;1649:16:1;;;1641:52;;;;-1:-1:-1;;;1641:52:1;;1330:2:42;1641:52:1;;;1312:21:42;1369:2;1349:18;;;1342:30;1408:25;1388:18;;;1381:53;1451:18;;1641:52:1;1128:347:42;1641:52:1;1700:14;:19;;-1:-1:-1;;;;;;1700:19:1;-1:-1:-1;;;;;1700:19:1;;;;;;;;;-1:-1:-1;1758:7:1;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:1;1536:239;:::o;1020:41522:41:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1020:41522:41;;;-1:-1:-1;1020:41522:41;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:42;93:13;;-1:-1:-1;;;;;135:31:42;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:574::-;301:6;309;317;325;333;386:3;374:9;365:7;361:23;357:33;354:53;;;403:1;400;393:12;354:53;432:9;426:16;416:26;;482:2;471:9;467:18;461:25;451:35;;529:2;518:9;514:18;508:25;573:10;566:5;562:22;555:5;552:33;542:61;;599:1;596;589:12;542:61;622:5;-1:-1:-1;646:49:42;691:2;676:18;;646:49;:::i;:::-;636:59;;714:50;759:3;748:9;744:19;714:50;:::i;:::-;704:60;;196:574;;;;;;;;:::o;1128:347::-;1020:41522:41;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1020:41522:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36325:276;;;;;;:::i;:::-;;:::i;:::-;;;;647:25:42;;;715:14;;708:22;703:2;688:18;;681:50;620:18;36325:276:41;;;;;;;;9852:100;;;;;;:::i;:::-;;:::i;:::-;;40006:727;;;;;;:::i;:::-;;:::i;:::-;;;;1318:25:42;;;1374:2;1359:18;;1352:34;;;;1402:18;;;1395:34;1306:2;1291:18;40006:727:41;1116:319:42;6517:31:41;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;36845:234::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7489:280:3:-;;;;;;:::i;:::-;;:::i;38766:255:41:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10386:2689::-;;;;;;:::i;:::-;;:::i;16784:1385::-;;;;;;:::i;:::-;;:::i;33389:186::-;;;;;;:::i;:::-;;:::i;:::-;;;11936:14:42;;11929:22;11911:41;;11899:2;11884:18;33389:186:41;11771:187:42;38434:95:41;38510:12;;38434:95;;;12109:25:42;;;12097:2;12082:18;38434:95:41;11963:177:42;7126:37:41;;;;;;:::i;:::-;;:::i;37296:750::-;;;:::i;:::-;;;;;;;;:::i;18918:3305::-;;;:::i;38199:106::-;;;:::i;6713:32::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;13169:32:42;;;13151:51;;13139:2;13124:18;6713:32:41;13005:203:42;23023:1068:41;;;;;;:::i;:::-;;:::i;40739:104::-;;;;;;:::i;:::-;;:::i;33761:2269::-;;;:::i;:::-;;;;;;;;:::i;1026:316:1:-;;;:::i;39290:340:41:-;;;;;;:::i;:::-;;:::i;24763:1037::-;;;:::i;41158:1008::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;25966:1235::-;;;:::i;1382:81:1:-;1429:7;1451;-1:-1:-1;;;;;1451:7:1;1382:81;;7831:276:3;;;;;;:::i;:::-;;:::i;42365:175:41:-;;;;;;:::i;:::-;-1:-1:-1;;;;;42488:18:41;42462:7;42488:18;;;:5;:18;;;;;:45;;;;42365:175;6771:33;;;;;;6077:45:3;;;;;-1:-1:-1;;;;;6077:45:3;;;22448:323:41;;;;;;:::i;:::-;;:::i;6582:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6582:37:41;;;;;;;;;;;;;;;;;;;;;:::i;6392:24::-;;;;;-1:-1:-1;;;;;6392:24:41;;;28172:353;;;:::i;24306:283::-;;;;;;:::i;:::-;;:::i;13425:3119::-;;;;;;:::i;:::-;;:::i;27428:618::-;;;;;;:::i;:::-;;:::i;847:98:1:-;;;;;;:::i;:::-;;:::i;36325:276:41:-;-1:-1:-1;;;;;36437:12:41;;36408:7;36437:12;;;:5;:12;;;;;:20;36408:7;;36437:25;;36433:95;;36485:32;;-1:-1:-1;;;36485:32:41;;-1:-1:-1;;;;;13169:32:42;;36485::41;;;13151:51:42;13124:18;;36485:32:41;;;;;;;;36433:95;-1:-1:-1;;36552:10:41;36546:17;;;;:5;:17;;;;;:41;;;;;;-1:-1:-1;36325:276:41:o;9852:100::-;8207:5;;-1:-1:-1;;;;;8207:5:41;8193:10;:19;8189:84;;8235:27;;-1:-1:-1;;;8235:27:41;;;;;;;;;;;8189:84;9925:8:::1;:20:::0;;-1:-1:-1;;;;;;9925:20:41::1;-1:-1:-1::0;;;;;9925:20:41;;;::::1;::::0;;;::::1;::::0;;9852:100::o;40006:727::-;40136:13;40151:19;40172:21;40214:9;40226:12;;40214:24;;40209:463;40240:5;;40209:463;;40302:5;40270:37;;;;;;;;:::i;:::-;:9;40280:5;40284:1;40280;:5;:::i;:::-;40270:16;;;;;;;;:::i;:::-;;;;;;;;;:28;:16;;;;;:28;;;;;:37;;;;;;;:::i;:::-;;40266:396;;40327:27;40357:9;40367:5;40371:1;40367;:5;:::i;:::-;40357:16;;;;;;;;:::i;:::-;;;;;;;;;;;40327:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;40327:46:41;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;40327:46:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;40327:46:41;;;-1:-1:-1;;40327:46:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40395:16;;;;40327:46;;-1:-1:-1;40395:25:41;;40327:46;40395:25;40391:88;;40452:1;40455;40458;40444:16;;;;;;;;;;40391:88;40526:7;:15;;;40563:7;:15;;;:22;40607:7;:22;;;40497:150;;;;;;;;;;40266:396;40247:3;;;;:::i;:::-;;;;40209:463;;;;40688:38;;-1:-1:-1;;;40688:38:41;;;;;;;:::i;40006:727::-;;;;;;:::o;6517:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6517:31:41;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;36845:234::-;36924:11;;:::i;:::-;-1:-1:-1;;;;;36951:12:41;;;;;;:5;:12;;;;;:20;:25;;36947:95;;36999:32;;-1:-1:-1;;;36999:32:41;;-1:-1:-1;;;;;13169:32:42;;36999::41;;;13151:51:42;13124:18;;36999:32:41;13005:203:42;36947:95:41;-1:-1:-1;;;;;37059:12:41;;;;;;;:5;:12;;;;;;;;;37051:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37059:12;;37051:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;37051:21:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36845:234;;;:::o;7489:280:3:-;7612:16;;-1:-1:-1;;;;;7612:16:3;7590:10;:39;7586:131;;7692:16;;7646:64;;-1:-1:-1;;;7646:64:3;;7672:10;7646:64;;;19037:51:42;-1:-1:-1;;;;;7692:16:3;;;19104:18:42;;;19097:60;19010:18;;7646:64:3;18863:300:42;7586:131:3;7722:42;7741:9;7752:11;;7722:18;:42::i;:::-;7489:280;;;:::o;38766:255:41:-;38846:19;;:::i;:::-;38894:12;;38881:9;:25;38877:101;;38929:38;;-1:-1:-1;;;38929:38:41;;;;;;;:::i;38877:101::-;38994:9;39004;38994:20;;;;;;;;:::i;:::-;;;;;;;;;;;38987:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;38987:27:41;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;38987:27:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;38987:27:41;;;-1:-1:-1;;38987:27:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38766:255;-1:-1:-1;;38766:255:41:o;10386:2689::-;8348:8;;-1:-1:-1;;;;;8348:8:41;8334:10;:22;8330:90;;8379:30;;-1:-1:-1;;;8379:30:41;;;;;;;;;;;8330:90;10693:15:::1;10674;:34;;10653:107;;;::::0;-1:-1:-1;;;10653:107:41;;19370:2:42;10653:107:41::1;::::0;::::1;19352:21:42::0;19409:2;19389:18;;;19382:30;19448:28;19428:18;;;19421:56;19494:18;;10653:107:41::1;19168:350:42::0;10653:107:41::1;10906:29;::::0;10949:117:::1;10973:20;10969:1;:24;10949:117;;;11039:13;11053:1;11039:16;;;;;;;:::i;:::-;;;;::::0;11014:41:::1;::::0;;::::1;:::i;:::-;::::0;-1:-1:-1;10995:3:41::1;;10949:117;;;;11121:13;11096:21;:38;;11075:119;;;::::0;-1:-1:-1;;;11075:119:41;;20258:2:42;11075:119:41::1;::::0;::::1;20240:21:42::0;20297:2;20277:18;;;20270:30;20336:34;20316:18;;;20309:62;-1:-1:-1;;;20387:18:42;;;20380:32;20429:19;;11075:119:41::1;20056:398:42::0;11075:119:41::1;11205:25;11224:5;11205:18;:25::i;:::-;11313:9;:16:::0;;::::1;::::0;::::1;::::0;;11279:31:::1;11313:16:::0;;;::::1;;::::0;::::1;::::0;11379:5:::1;:25;;;;;;;;:::i;:::-;::::0;11375:251:::1;;11441:9;:11:::0;;;:9:::1;:11;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;11420:18:41::1;::::0;::::1;:32:::0;11488:13;;11466:19:::1;:35:::0;11375:251:::1;;;11553:10;:12:::0;;;:10:::1;:12;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;11532:18:41::1;::::0;::::1;:33:::0;11602:13;;11579:20:::1;:36:::0;11375:251:::1;11652:12;:14:::0;;;:12:::1;:14;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;11636:30:41;;11676:22:::1;::::0;::::1;:30:::0;;11701:5;;11676:22;-1:-1:-1;;11676:30:41::1;::::0;11701:5;11676:30;;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;11739:15:41::1;11716:20;::::0;::::1;:38:::0;11764:25:::1;::::0;::::1;:43:::0;;;11817:25:::1;::::0;::::1;:43:::0;;;11870:23:::1;::::0;::::1;:39:::0;;;11919:19:::1;::::0;::::1;:26:::0;;-1:-1:-1;;11919:26:41::1;11941:4;11919:26:::0;;::::1;::::0;;;11980:13:::1;::::0;12002:5;;11994:14;::::1;;;;;;:::i;:::-;11980:29;;;;;;;:::i;:::-;;::::0;11955:22:::1;::::0;::::1;:54:::0;12052:15;12040:28:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;12040:28:41::1;-1:-1:-1::0;12019:49:41;;::::1;::::0;:18:::1;::::0;::::1;::::0;:49:::1;::::0;;::::1;::::0;::::1;:::i;:::-;;12125:13;12112:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;12112:27:41::1;-1:-1:-1::0;12078:61:41;;::::1;::::0;:31:::1;::::0;::::1;::::0;:61:::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;12219:9:41::1;12214:198;12238:1;12234;:5;12214:198;;;12293:108;;;;;;;;12322:13;12336:1;12322:16;;;;;;;:::i;:::-;;;;::::0;:22:::1;::::0;12341:3:::1;12322:22;:::i;:::-;12293:108;;;;12362:13;12384:1;12362:25;;;;;;;:::i;:::-;;;;::::0;12293:108;;12260:27:::1;::::0;::::1;12288:1:::0;12260:30:::1;::::0;::::1;;;;;:::i;:::-;:141:::0;;:30:::1;::::0;;;::::1;::::0;;;::::1;:141:::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;12241:3:::1;12214:198;;;-1:-1:-1::0;12435:16:41::1;12426:5;:25;;;;;;;;:::i;:::-;::::0;12422:601:::1;;12488:18;:37:::0;12467:18:::1;12539:186;12563:10;12559:1;:14;12539:186;;;12705:5;12598:31:::0;12705:5;12598:18:::1;12705:5:::0;12651:21:::1;;;:33:::0;;12682:1;;12651:33;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;12651:33:41::1;12598:104:::0;;;::::1;::::0;;;;;;;;:112;;-1:-1:-1;;12598:112:41::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;12575:3:41::1;12539:186;;;;12453:282;12422:601;;;12776:21:::0;:37;12755:18:::1;12827:186;12851:10;12847:1;:14;12827:186;;;12993:5;12886:31:::0;12993:5;12886:18:::1;12905:1;12939:21;;;:33:::0;;12970:1;;12939:33;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;12939:33:41::1;12886:104:::0;;;::::1;::::0;;;;;;;;:112;;-1:-1:-1;;12886:112:41::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;12863:3:41::1;12827:186;;;;12741:282;12422:601;13054:13:::0;;13038:30:::1;::::0;::::1;::::0;13054:13:::1;::::0;13038:30:::1;10643:2432;;10386:2689:::0;;;;;;:::o;16784:1385::-;8348:8;;-1:-1:-1;;;;;8348:8:41;8334:10;:22;8330:90;;8379:30;;-1:-1:-1;;;8379:30:41;;;;;;;;;;;8330:90;16866:12:::1;;16853:9;:25;16849:101;;16901:38;;-1:-1:-1::0;;;16901:38:41::1;;;;;;;:::i;16849:101::-;16960:28;16991:9;17001;16991:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;17026:16:::1;16991:20;::::0;;::::1;;17026:16:::0;;::::1;::::0;16991:20;;-1:-1:-1;17026:16:41::1;;:25;;::::0;;17022:83:::1;;17074:20;;-1:-1:-1::0;;;17074:20:41::1;;;;;;;;;;;17022:83;17132:9;17115:14;:26;;;;17175:19;17204:9;17214;17204:20;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;:35;;;;17175:65;;17270:9;17280;17270:20;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;17255:12;:50;;;17251:135;;;17328:47;::::0;-1:-1:-1;;;17328:47:41;;20946:10:42;20934:23;;17328:47:41::1;::::0;::::1;20916:42:42::0;20889:18;;17328:47:41::1;20772:192:42::0;17251:135:41::1;17395:18;17423:9;17433;17423:20;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;17395:62;;17486:1;17471:11;:16;;;17467:55;;17503:8;;;17467:55;17555:16;::::0;;17569:1:::1;17555:16:::0;;::::1;::::0;::::1;::::0;;;;17532:39;::::1;::::0;:20:::1;::::0;:39:::1;:::i;:::-;-1:-1:-1::0;17587:9:41::1;17582:581;17606:1;17602;:5;17582:581;;;17628:16;::::0;17681:457:::1;::::0;;::::1;::::0;::::1;::::0;;17747:9:::1;17681:457:::0;;17785:16:::1;17681:457;::::0;;::::1;::::0;;;;6279:1:::1;17681:457:::0;;;;::::1;17906:18;17681:457;::::0;;;;17956:3:::1;17681:457:::0;;;;18046:51;;;;::::1;::::0;;;17628:16:::1;18046:51:::0;;-1:-1:-1;;;;;17628:16:41;;::::1;::::0;:35:::1;::::0;17681:457;;;;17992:127:::1;::::0;:28:::1;:127::i;:::-;17681:457;;::::0;17628:524:::1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;17609:3:41::1;;17582:581;;;;16839:1330;;;16784:1385:::0;:::o;33389:186::-;-1:-1:-1;;;;;33482:12:41;;33447:4;33482:12;;;:5;:12;;;;;:32;;;33553:15;;33482:56;;5524:17;;33482:56;:::i;:::-;:86;;33389:186;-1:-1:-1;;33389:186:41:o;7126:37::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7126:37:41;:::o;37296:750::-;37484:15;:22;37370:7;;37379:21;;37370:7;;;37484:22;37553:63;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;37553:63:41;;;;;;;;;;;;;;;-1:-1:-1;37517:99:41;-1:-1:-1;37632:13:41;37627:366;37659:21;37651:5;:29;37627:366;;;37726:137;;;;;;;;37756:15;37772:5;37756:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;37756:22:41;-1:-1:-1;;;;;37726:137:41;;;;;37796:5;:29;37802:15;37818:5;37802:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;37802:22:41;37796:29;;;;;;;;;;;;:53;;;37726:137;;37705:18;;:11;;37717:5;;37705:18;;;;;;:::i;:::-;;;;;;:158;;;;37895:5;:29;37901:15;37917:5;37901:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;37901:22:41;37895:29;;;;;;;;;;;;:87;;;37877:105;;;;:::i;:::-;;-1:-1:-1;37682:7:41;;37627:366;;;-1:-1:-1;38011:14:41;;38027:11;;-1:-1:-1;37296:750:41;;-1:-1:-1;;37296:750:41:o;18918:3305::-;8348:8;;-1:-1:-1;;;;;8348:8:41;8334:10;:22;8330:90;;8379:30;;-1:-1:-1;;;8379:30:41;;;;;;;;;;;8330:90;18973:28:::1;19004:9;19014:14;;19004:25;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;19063:20:::1;19004:25;::::0;;::::1;;19063:20:::0;;::::1;::::0;19120:15:::1;::::0;::::1;:22:::0;19004:25;;-1:-1:-1;19063:20:41;19004:25;19203:24:::1;::::0;::::1;19004:25:::0;19203:27:::1;;;:39;;;19182:60;;19253:19;19282:18;19310:13;19326:1;19310:17;;19337:28;19368:20;19337:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19442:12;19420:11;:18;:34;;19399:106;;;::::0;-1:-1:-1;;;19399:106:41;;22280:2:42;19399:106:41::1;::::0;::::1;22262:21:42::0;22319:2;22299:18;;;22292:30;22358:27;22338:18;;;22331:55;22403:18;;19399:106:41::1;22078:349:42::0;19399:106:41::1;19516:30;;:::i;:::-;19561:9;19556:174;19580:1;19576;:5;19556:174;;;19679:7;:24;;19704:1;19679:27;;;;;;;:::i;:::-;;;;:39;;;19621:7;:24;;19646:1;19621:27;;;;;;;:::i;:::-;;;;:39:::0;:97:::1;::::0;;::::1;:::i;:::-;19602:12;19615:1;19602:15;;;;;;;:::i;:::-;;;;:117:::0;19583:3:::1;;19556:174;;;-1:-1:-1::0;19745:9:41::1;19740:2274;19764:12;19760:1;:16;19740:2274;;;19827:16;19810:11;19822:1;19810:14;;;;;;;;:::i;:::-;;;;;;;:33;;;;:::i;:::-;19797:46;;19862:7;:15;;19878:10;19862:27;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;::::1;;::::0;::::1;;:32:::0;:46;::::1;;;-1:-1:-1::0;19898:10:41;;19862:46:::1;19858:1967;;;19969:10;19928:7;:28;;19957:1;19928:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;20028:9;20040:1;20028:13;;;;:::i;:::-;19998:7;:15;;20014:10;19998:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;20059:23;20085:7;:15;;20101:10;20085:27;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:36:::0;-1:-1:-1;;;;;20085:36:41::1;::::0;-1:-1:-1;20234:12:41;;:23:::1;::::0;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;20139:5;:22;20145:15;-1:-1:-1::0;;;;;20139:22:41::1;-1:-1:-1::0;;;;;20139:22:41::1;;;;;;;;;;;;:56;;:91;;;:118;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;20370:12:41;;-1:-1:-1;20370:23:41::1;::::0;::::1;;::::0;::::1;;;;;:::i;:::-;;;;;20275:5;:22;20281:15;-1:-1:-1::0;;;;;20275:22:41::1;-1:-1:-1::0;;;;;20275:22:41::1;;;;;;;;;;;;:56;;:91;;;:118;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;19858:1967:41::1;::::0;-1:-1:-1;;19858:1967:41::1;;20446:11;20458:1;20446:14;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;20501:16:41;20479:19:::1;20557:1229;20581:11;20577:1;:15;20557:1229;;;20621:23;20758:16;20707:11;20719:1;20707:14;;;;;;;;:::i;:::-;;;;;;;20723:1;20726:5;20690:42;;;;;;;;;23144:19:42::0;;;23188:2;23179:12;;23172:28;;;;23225:2;23216:12;;23209:28;23262:2;23253:12;;22959:312;20690:42:41::1;;;;;;;;;;;;;20680:53;;;;;;20647:108;;:127;;;;:::i;:::-;20621:153;;20826:9;20836:14;;20826:25;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;20860:15;20826:50;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;;::::0;::::1;::::0;;;;::::1;;::::0;::::1;;:55:::0;;20797:971:::1;;21000:15;20930:7;:28;;20959:1;20930:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:111;;;;;;;;;;;;;;;;;;21149:9;21189:1;21149:41;;;;:::i;:::-;21068:9;21078:14;;21068:25;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;21102:15;21068:50;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:122;;;;;;;;;;;;;;;;;;21216:23;21242:9;21252:14;;21242:25;;;;;;;;:::i;:::-;;;;;;;;;;;:62;;21305:15;21242:79;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:117:::0;-1:-1:-1;;;;;21242:117:41::1;::::0;-1:-1:-1;21496:12:41;;:23:::1;::::0;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;21385:5;:22;21391:15;-1:-1:-1::0;;;;;21385:22:41::1;-1:-1:-1::0;;;;;21385:22:41::1;;;;;;;;;;;;:64;;:107;;;:134;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;21656:12:41;;-1:-1:-1;21656:23:41::1;::::0;::::1;;::::0;::::1;;;;;:::i;:::-;;;;;21545:5;:22;21551:15;-1:-1:-1::0;;;;;21545:22:41::1;-1:-1:-1::0;;;;;21545:22:41::1;;;;;;;;;;;;:64;;:107;;;:134;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;21713:1:41::1;::::0;-1:-1:-1;21740:5:41::1;::::0;-1:-1:-1;;;21740:5:41::1;20797:971;-1:-1:-1::0;20594:3:41::1;;20557:1229;;;-1:-1:-1::0;21803:7:41;::::1;::::0;::::1;:::i;:::-;;;;20414:1411;19858:1967;21852:10:::0;21843:5:::1;:1:::0;21847::::1;21843:5;:::i;:::-;:19;:36;;;;;21878:1;21866:9;:13;;;21843:36;21839:165;;;21899:11:::0;::::1;::::0;::::1;:::i;:::-;;;;21942:7;:24;;21967:9;21942:35;;;;;;;;;:::i;:::-;;;;:47;;;21928:61;;;;;:::i;:::-;;;21839:165;19778:3;;19740:2274;;;-1:-1:-1::0;22056:10:41;;22023:30:::1;:43:::0;22076:16:::1;::::0;::::1;:24:::0;;-1:-1:-1;;22076:24:41::1;::::0;;22140:14:::1;::::0;22116:39:::1;::::0;::::1;::::0;22056:10:::1;::::0;22116:39:::1;-1:-1:-1::0;;22215:1:41::1;22198:14;:18:::0;-1:-1:-1;;;;;;;;18918:3305:41:o;38199:106::-;8207:5;;38260:7;;-1:-1:-1;;;;;8207:5:41;8193:10;:19;8189:84;;8235:27;;-1:-1:-1;;;8235:27:41;;;;;;;;;;;8189:84;-1:-1:-1;38286:12:41::1;::::0;38199:106;:::o;6713:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6713:32:41;;-1:-1:-1;6713:32:41;:::o;23023:1068::-;2500:21:36;:19;:21::i;:::-;23147:13:41::1;23126:18;23195:15;23208:2;23147:13:::0;23195:15:::1;:::i;:::-;23170:40:::0;-1:-1:-1;23241:10:41::1;-1:-1:-1::0;;;;;23229:22:41;::::1;::::0;23221:65:::1;;;::::0;-1:-1:-1;;;23221:65:41;;23658:2:42;23221:65:41::1;::::0;::::1;23640:21:42::0;23697:2;23677:18;;;23670:30;23736:32;23716:18;;;23709:60;23786:18;;23221:65:41::1;23456:354:42::0;23221:65:41::1;-1:-1:-1::0;;;;;23304:22:41;::::1;23296:59;;;::::0;-1:-1:-1;;;23296:59:41;;24017:2:42;23296:59:41::1;::::0;::::1;23999:21:42::0;24056:2;24036:18;;;24029:30;24095:26;24075:18;;;24068:54;24139:18;;23296:59:41::1;23815:348:42::0;23296:59:41::1;23429:10;23423:17;::::0;;;:5:::1;:17;::::0;;;;:25;:30;23419:95:::1;;23476:27;;-1:-1:-1::0;;;23476:27:41::1;;;;;;;;;;;23419:95;23524:15;:32:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;23524:32:41;;;;;::::1;::::0;;-1:-1:-1;;;;;;23524:32:41::1;23545:10;23524:32:::0;;::::1;::::0;;;23617:9:::1;::::0;23602:128:::1;::::0;-1:-1:-1;;;;;23617:9:41;;;::::1;::::0;23691:4:::1;23710:10:::0;23602:43:::1;:128::i;:::-;-1:-1:-1::0;;;;;23790:15:41;::::1;;::::0;;;:5:::1;:15;::::0;;;;:47;;:65;;23841:14;;23790:15;:65:::1;::::0;23841:14;;23790:65:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;23865:15:41;::::1;;::::0;;;:5:::1;:15;::::0;;;;:47;;:65;;23916:14;;23865:15;:65:::1;::::0;23916:14;;23865:65:::1;:::i;:::-;::::0;;;-1:-1:-1;23957:27:41::1;::::0;-1:-1:-1;23970:14:41;23957:10;:27:::1;:::i;:::-;23940:12;;:45;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;24001:10:41::1;23995:17;::::0;;;:5:::1;:17;::::0;;;;;24023:15:::1;23995:43:::0;;24054:30;::::1;::::0;23995:17;24054:30:::1;23116:975;;2542:20:36::0;1857:1;3068:7;:21;2888:208;2542:20;23023:1068:41;:::o;40739:104::-;40794:11;;:::i;33761:2269::-;33886:22;;33809:15;;33826:7;;;;33886:22;;;;;33873:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33873:36:41;;;;;;;;;;;;;;;;-1:-1:-1;33983:20:41;:27;33845:64;;-1:-1:-1;33919:20:41;;;34021:1958;34045:18;34041:1;:22;34021:1958;;;34084:12;34099:20;34120:1;34099:23;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;34099:23:41;;-1:-1:-1;34140:18:41;34099:23;34140:12;:18::i;:::-;34136:1833;;;-1:-1:-1;;;;;34193:11:41;;34178:12;34193:11;;;:5;:11;;;;;;;;:41;;;;:28;;34270:44;34454:22;;;;;;;34439:37;;;:102;;-1:-1:-1;34507:9:41;34517:16;34532:1;34517:12;:16;:::i;:::-;34507:27;;;;;;;;:::i;:::-;;;;;;;:34;;;34500:4;:41;34439:102;34414:1541;;;34607:12;34744:209;34793:1;34776:14;:18;:89;;;;-1:-1:-1;34861:4:41;34822:9;34832:18;34849:1;34832:14;:18;:::i;:::-;34822:29;;;;;;;;:::i;:::-;;;;;;;:36;;;:43;34776:89;34744:209;;;34914:16;;;;:::i;:::-;;;;34744:209;;;35062:22;;;;;;;35045:39;;35041:896;;;35259:22;;35232:9;;35259:22;;;;;35244:37;;:145;;35363:22;;:26;;35388:1;;35363:22;;;;;:26;:::i;:::-;35244:145;;;;;35316:12;35244:145;35232:157;;35198:387;35423:14;35419:1;:18;35198:387;;;35542:9;35552:5;35556:1;35552;:5;:::i;:::-;35542:16;;;;;;;;:::i;:::-;;;;;;;35527:9;35537:1;35527:12;;;;;;;;:::i;:::-;;;;;;:31;;;;35467:3;;;;;:::i;:::-;;;;35198:387;;;;35684:27;;;;;;;;35691:4;-1:-1:-1;;;;;35684:27:41;;;;;35697:7;35684:27;;;;35706:4;35684:27;;;35656:9;35666:14;35656:25;;;;;;;;:::i;:::-;;;;;;;;;;:55;35820:22;;;;;;;35805:37;;35801:114;;;35874:14;;;;:::i;:::-;;;;35801:114;34560:1395;34414:1541;34160:1809;;34136:1833;-1:-1:-1;34065:3:41;;34021:1958;;;;35997:9;36008:14;;35989:34;;;;;;;33761:2269;;:::o;1026:316:1:-;1150:14;;-1:-1:-1;;;;;1150:14:1;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:1;;24526:2:42;1128:63:1;;;24508:21:42;24565:2;24545:18;;;24538:30;-1:-1:-1;;;24584:18:42;;;24577:52;24646:18;;1128:63:1;24324:346:42;1128:63:1;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:1;;;;;;;-1:-1:-1;1256:27:1;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:1;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;39290:340:41:-;39372:19;;:::i;:::-;39420:12;;39403:166;39434:5;;39403:166;;39496:5;39464:37;;;;;;;;:::i;:::-;:9;39474:5;39478:1;39474;:5;:::i;:::-;39464:16;;;;;;;;:::i;:::-;;;;;;;;;:28;:16;;;;;:28;;;;;:37;;;;;;;:::i;:::-;;39460:99;;39528:9;39538:5;39542:1;39538;:5;:::i;:::-;39528:16;;;;;;;;:::i;:::-;;;;;;;;;;;39521:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;39521:23:41;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;39521:23:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39521:23:41;;;-1:-1:-1;;39521:23:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39290:340;-1:-1:-1;;;39290:340:41:o;39460:99::-;39441:3;;;;:::i;:::-;;;;39403:166;;24763:1037;24920:25;24947:19;24970:17;:15;:17::i;:::-;25035:22;;24919:68;;-1:-1:-1;24919:68:41;-1:-1:-1;24997:21:41;;25021:36;;25035:22;;;;;24919:68;25021:36;:::i;:::-;24997:60;-1:-1:-1;25072:13:41;25067:320;25099:22;;;;;;;25091:30;;25067:320;;;25146:12;25161:9;25171:5;25161:16;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;-1:-1:-1;;;;;;25200:18:41;;;25196:181;;-1:-1:-1;;;;;25238:11:41;;;;;;:5;:11;;;;;:36;;:53;;25278:13;;25238:11;:53;;25278:13;;25238:53;:::i;:::-;;;;-1:-1:-1;;;;;;;25309:11:41;;;;;;:5;:11;;;;;:36;;:53;;25349:13;;25309:11;:53;;25349:13;;25309:53;:::i;:::-;;;;-1:-1:-1;;25196:181:41;-1:-1:-1;25123:7:41;;25067:320;;;-1:-1:-1;25417:20:41;:27;25397:17;25454:262;25486:9;25478:5;:17;25454:262;;;25520:19;25542:20;25563:5;25542:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;25542:27:41;25584:18;;:5;:18;;;;;;;:35;;;:55;;;25653:48;;:52;-1:-1:-1;25542:27:41;25497:7;25454:262;;;-1:-1:-1;25749:16:41;;;25763:1;25749:16;;;;;;;;;25726:39;;;:20;;:39;:::i;:::-;-1:-1:-1;;25792:1:41;25775:14;:18;-1:-1:-1;;;24763:1037:41:o;41158:1008::-;41263:22;41287:7;41296;41305:11;41332:27;41362:9;41372:10;41362:21;;;;;;;;:::i;:::-;;;;;;;;;;;41332:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;41332:51:41;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;41332:51:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41332:51:41;;;-1:-1:-1;;41332:51:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41466:20;;;41332:51;;-1:-1:-1;41332:51:41;;41433:63;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41433:63:41;;-1:-1:-1;;41433:63:41;;;;;;;;;;;-1:-1:-1;41393:103:41;-1:-1:-1;41512:9:41;41507:511;41531:7;:20;;;41527:1;:24;41507:511;;;41572:36;41611:7;:28;;;41572:67;;41653:11;41667:7;:15;;;41683:20;41704:1;41683:23;;;;;;;;:::i;:::-;;;;;;;41667:40;;;;;;;;;;:::i;:::-;;;;;;;41653:54;;41721:20;41744:7;:15;;;41760:20;41781:1;41760:23;;;;;;;;:::i;:::-;;;;;;;41744:40;;;;;;;;;;:::i;:::-;;;;;;;41721:63;;41819:188;;;;;;;;41855:20;41876:1;41855:23;;;;;;;;:::i;:::-;;;;;;;41819:188;;;;;;41904:6;:19;;;-1:-1:-1;;;;;41819:188:41;;;;;;41947:6;:15;;;-1:-1:-1;;;;;41819:188:41;;;;;41987:5;41819:188;;;;;41799:14;41814:1;41799:17;;;;;;;;:::i;:::-;;;;;;;;;;:208;-1:-1:-1;;;41553:3:41;;41507:511;;;-1:-1:-1;42077:10:41;;42101:15;;;;42130:19;;;;;42049:14;;42077:10;;-1:-1:-1;42101:15:41;;-1:-1:-1;42130:19:41;-1:-1:-1;41158:1008:41;-1:-1:-1;;41158:1008:41:o;25966:1235::-;2500:21:36;:19;:21::i;:::-;26220:10:41::1;26179:32;26214:17:::0;;;:5:::1;:17;::::0;;;;;;;26179:65;;::::1;::::0;::::1;::::0;;26214:30:::1;::::0;::::1;26179:65:::0;;;;;;;;;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;:65;;;;26325:44:::1;::::0;26179:65;26325:44:::1;:::i;:::-;:85;;;;:::i;:::-;:119;;;;:::i;:::-;:155;;;;:::i;:::-;26301:179;;26511:2;26495:13;:18;26491:88;;;26536:32;;-1:-1:-1::0;;;26536:32:41::1;;;;;;;;;;;26491:88;26619:10;26653:1;26613:17:::0;;;:5:::1;:17;::::0;;;;:30:::1;::::0;::::1;:41:::0;;;26664:45;;;:49;;;26723:41;;;:45;;;26778:49;;;:53;;;26841:42;;;:46;;;26897:44;;:48;26956:113:::1;::::0;27056:2:::1;27035:17;:13:::0;27051:1:::1;27035:17;:::i;:::-;27034:24;;;;:::i;:::-;26971:9;::::0;-1:-1:-1;;;;;26971:9:41::1;::::0;26956:113;:39:::1;:113::i;:::-;27096:18;27112:2;27096:13:::0;:18:::1;:::i;:::-;27079:12;;:36;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;27152:42:41::1;::::0;27180:13;;27152:42:::1;::::0;;;::::1;26022:1179;;;2542:20:36::0;1857:1;3068:7;:21;2888:208;2542:20;25966:1235:41:o;7831:276:3:-;1429:7:1;1451;-1:-1:-1;;;;;1451:7:1;8155:10:3;:21;;;;:64;;-1:-1:-1;8202:16:3;;-1:-1:-1;;;;;8202:16:3;8180:10;:39;;8155:64;8151:162;;;8259:10;8271:7;1429::1;1451;-1:-1:-1;;;;;1451:7:1;;1382:81;8271:7:3;8288:16;;8236:70;;-1:-1:-1;;;8236:70:3;;-1:-1:-1;;;;;24895:32:42;;;8236:70:3;;;24877:51:42;24964:32;;;24944:18;;;24937:60;8288:16:3;;;;25013:18:42;;;25006:60;24850:18;;8236:70:3;24675:397:42;8151:162:3;-1:-1:-1;;;;;7931:29:3;::::1;7927:70;;7977:13;;-1:-1:-1::0;;;7977:13:3::1;;;;;;;;;;;7927:70;8002:16;:57:::0;;-1:-1:-1;;;;;;8002:57:3::1;-1:-1:-1::0;;;;;8002:57:3;::::1;::::0;;::::1;::::0;;;8071:31:::1;::::0;13151:51:42;;;8071:31:3::1;::::0;13139:2:42;13124:18;8071:31:3::1;;;;;;;7831:276:::0;:::o;22448:323:41:-;8348:8;;-1:-1:-1;;;;;8348:8:41;8334:10;:22;8330:90;;8379:30;;-1:-1:-1;;;8379:30:41;;;;;;;;;;;8330:90;2500:21:36::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;22553:12:41;::::2;;::::0;;;:5:::2;:12;::::0;;;;:20;:25;22549:90:::2;;22601:27;;-1:-1:-1::0;;;22601:27:41::2;;;;;;;;;;;22549:90;22648:15;:27:::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;;22648:27:41::2;-1:-1:-1::0;;;;;22648:27:41;::::2;::::0;;::::2;::::0;;;-1:-1:-1;22685:12:41;;;:5:::2;22648:27;22685:12:::0;;;;;22708:15:::2;22685:38:::0;;22739:25;::::2;::::0;-1:-1:-1;22739:25:41::2;2542:20:36::1;1857:1:::0;3068:7;:21;2888:208;28172:353:41;2500:21:36;:19;:21::i;:::-;28264:1:41::1;28248:12;;:17;28244:87;;28288:32;;-1:-1:-1::0;;;28288:32:41::1;;;;;;;;;;;28244:87;28356:1;28341:12;:16:::0;;;28411:9:::1;::::0;28396:65:::1;::::0;-1:-1:-1;;;;;28411:9:41;;::::1;::::0;28436:10:::1;::::0;28396:39:::1;:65::i;:::-;28505:12;::::0;28477:41:::1;::::0;::::1;::::0;;;::::1;2542:20:36::0;1857:1;3068:7;:21;2888:208;24306:283:41;8348:8;;-1:-1:-1;;;;;8348:8:41;8334:10;:22;8330:90;;8379:30;;-1:-1:-1;;;8379:30:41;;;;;;;;;;;8330:90;-1:-1:-1;;;;;24387:12:41;::::1;;::::0;;;:5:::1;:12;::::0;;;;:20;:25;;24383:95:::1;;24435:32;::::0;-1:-1:-1;;;24435:32:41;;-1:-1:-1;;;;;13169:32:42;;24435::41::1;::::0;::::1;13151:51:42::0;13124:18;;24435:32:41::1;13005:203:42::0;24383:95:41::1;-1:-1:-1::0;;;;;24487:12:41;::::1;24510:1;24487:12:::0;;;:5:::1;:12;::::0;;;;;:24;;;24555:27;::::1;::::0;24510:1;24555:27:::1;24306:283:::0;:::o;13425:3119::-;2500:21:36;:19;:21::i;:::-;13626:12:41::1;;13613:9;:25;13609:100;;13661:37;::::0;-1:-1:-1;;;13661:37:41;;25279:2:42;13661:37:41::1;::::0;::::1;25261:21:42::0;25318:2;25298:18;;;25291:30;-1:-1:-1;;;25337:18:42;;;25330:46;25393:18;;13661:37:41::1;25077:340:42::0;13609:100:41::1;13782:1;13768:11;:15;:54;;;;13811:11;13787:13;:20;:35;;13768:54;13764:129;;;13845:37;;-1:-1:-1::0;;;13845:37:41::1;;;;;;;;;;;13764:129;13903:28;13934:9;13944;13934:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;13969:16:::1;13934:20;::::0;;::::1;;13969:16:::0;;::::1;::::0;13934:20;;-1:-1:-1;13969:16:41::1;;:25;;::::0;;13965:83:::1;;14017:20;;-1:-1:-1::0;;;14017:20:41::1;;;;;;;;;;;13965:83;14101:22;::::0;::::1;::::0;14062:15:::1;::::0;::::1;:22:::0;:36:::1;::::0;14087:11;;14062:36:::1;:::i;:::-;:61;14058:117;;;14146:18;;-1:-1:-1::0;;;14146:18:41::1;;;;;;;;;;;14058:117;14184:19;14228:11;14206:7;:19;;;:33;;;;:::i;:::-;14265:9;::::0;14184:55;;-1:-1:-1;14250:129:41::1;::::0;-1:-1:-1;;;;;14265:9:41::1;14307:10;14339:4;14184:55:::0;14250:43:::1;:129::i;:::-;14446:10;14440:17;::::0;;;:5:::1;:17;::::0;;;;:41:::1;;:56:::0;;14485:11;;14440:17;:56:::1;::::0;14485:11;;14440:56:::1;:::i;:::-;::::0;;;-1:-1:-1;14511:9:41::1;::::0;-1:-1:-1;14506:296:41::1;14530:13;:20;14526:1;:24;14506:296;;;14571:7;:15;;14609:168;;;;;;;;14648:10;-1:-1:-1::0;;;;;14609:168:41::1;;;;;14691:15;14609:168;;;;14742:13;14756:1;14742:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;;14609:168:41;;::::1;::::0;;;14571:220;;::::1;::::0;;::::1;::::0;;-1:-1:-1;14571:220:41;;;;;;;;;::::1;::::0;;::::1;;::::0;;;;::::1;-1:-1:-1::0;;;;;14571:220:41;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;14571:220:41::1;;::::0;;;::::1;::::0;;;::::1;::::0;;14552:3:::1;14506:296;;;;14931:11;14899:7;:28;;;:43;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;14959:10:41::1;14953:17;::::0;;;:5:::1;:17;::::0;;;;;;14993:15:::1;14953:37;::::0;::::1;:55:::0;15085:34:::1;:50:::0;:55;;15081:123:::1;;15156:20;:37:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;15156:37:41;;;;;::::1;::::0;;-1:-1:-1;;;;;;15156:37:41::1;15182:10;15156:37;::::0;;15081:123:::1;15219:10;15213:17;::::0;;;:5:::1;:17;::::0;;;;;;:34:::1;:65:::0;;15267:11;;15213:17;:65:::1;::::0;15267:11;;15213:65:::1;:::i;:::-;::::0;;;-1:-1:-1;;15294:10:41::1;15288:17;::::0;;;:5:::1;:17;::::0;;;;:47;;:62;;15339:11;;15288:17;:62:::1;::::0;15339:11;;15288:62:::1;:::i;:::-;::::0;;;-1:-1:-1;15392:57:41::1;::::0;-1:-1:-1;15414:8:41;15424:11;15437;15392:21:::1;:57::i;:::-;15610:37;15635:11;15610:24;:37::i;:::-;15720:13;::::0;15737:3:::1;::::0;15706:27:::1;::::0;15720:13;;::::1;;;15706:11:::0;:27:::1;:::i;:::-;15705:35;;;;:::i;:::-;15687:14;;:53;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;15791:9:41::1;::::0;15750:22:::1;::::0;15804:3:::1;::::0;15777:23:::1;::::0;15791:9;;::::1;;;15777:11:::0;:23:::1;:::i;:::-;15776:31;;;;:::i;:::-;15750:58;;15834:14;15818:12;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;15924:16:41::1;::::0;-1:-1:-1;15901:19:41::1;::::0;::::1;::::0;::::1;;::::0;:39;::::1;;;;;;:::i;:::-;::::0;15897:595:::1;;15992:10;15979:1;15960:43:::0;;;:31;:43:::1;::::0;;;;;::::1;;:52;;::::0;;15956:248:::1;;16064:10;16051:1;16032:43:::0;;;:31;:43:::1;::::0;;;;:50;;-1:-1:-1;;16032:50:41::1;16078:4;16032:50:::0;;::::1;::::0;;;:18:::1;16100:47:::0;;;;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;16100:47:41::1;::::0;;::::1;::::0;;;16165:22:::1;::::0;::::1;:24:::0;;;::::1;::::0;::::1;:::i;:::-;;;;;;15956:248;15897:595;;;16270:10;16238:43;::::0;;;:31;:43:::1;::::0;;;;;::::1;;:52;;::::0;;16234:248:::1;;16342:10;16310:43;::::0;;;:31;:43:::1;::::0;;;;:50;;-1:-1:-1;;16310:50:41::1;16356:4;16310:50:::0;;::::1;::::0;;;:21;16378:47;;;;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;16378:47:41::1;::::0;;::::1;::::0;;;16443:22:::1;::::0;::::1;:24:::0;;;::::1;::::0;::::1;:::i;:::-;;;;;;16234:248;16507:30;::::0;16525:11;;16507:30:::1;::::0;;;::::1;13599:2945;;;2542:20:36::0;1857:1;3068:7;:21;2888:208;2542:20;13425:3119:41;;;;:::o;27428:618::-;8207:5;;-1:-1:-1;;;;;8207:5:41;8193:10;:19;8189:84;;8235:27;;-1:-1:-1;;;8235:27:41;;;;;;;;;;;8189:84;2500:21:36::1;:19;:21::i;:::-;27619:9:41::2;::::0;27604:73:::2;::::0;-1:-1:-1;;;27604:73:41;;27662:4:::2;27604:73;::::0;::::2;13151:51:42::0;27579:22:41::2;::::0;-1:-1:-1;;;;;27619:9:41::2;::::0;27604:36:::2;::::0;13124:18:42;;27604:73:41::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27579:98;;27762:7;27745:14;:24;27741:94;;;27792:32;;-1:-1:-1::0;;;27792:32:41::2;;;;;;;;;;;27741:94;27913:9;::::0;27898:60:::2;::::0;-1:-1:-1;;;;;27913:9:41::2;27938:10;27950:7:::0;27898:39:::2;:60::i;:::-;28003:36;::::0;28031:7;;28003:36:::2;::::0;;;::::2;27521:525;2542:20:36::1;1857:1:::0;3068:7;:21;2888:208;847:98:1;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;18428:276:41:-:0;18576:13;18571:127;18591:26;;;18571:127;;;18642:20;18668:11;;18680:5;18668:18;;;;;;;:::i;:::-;18642:45;;;;;;;;-1:-1:-1;18642:45:41;;;18668:18;18642:45;;;;18668:18;;;;;;;;;18642:45;;;;;;-1:-1:-1;18619:7:41;18571:127;;31290:603;31373:17;31364:5;:26;;;;;;;;:::i;:::-;;31360:527;;31427:20;;31451:19;31427:43;;:111;;;;;31490:9;31500:20;;31490:31;;;;;;;;:::i;:::-;;;;;;;;;:40;:31;;;;;:40;;;;:48;;:40;:48;31427:111;31406:206;;;31578:19;;-1:-1:-1;;;31578:19:41;;;;;;;;;;;31360:527;31641:16;31632:5;:25;;;;;;;;:::i;:::-;;31628:259;;31694:19;;31717;31694:42;;:109;;;;;31756:9;31766:19;;31756:30;;;;;;;;:::i;475:163:7:-;550:16;211:28;623:9;581:52;;;;;;25656:13:42;25649:21;25642:29;25624:48;;25612:2;25597:18;;25422:256;581:52:7;;;;-1:-1:-1;;581:52:7;;;;;;;;;;;;;;-1:-1:-1;;;;;581:52:7;-1:-1:-1;;;;;;581:52:7;;;;;;;;;;;475:163;-1:-1:-1;;475:163:7:o;2575:307:36:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:36;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;1618:188:34:-;1745:53;;-1:-1:-1;;;;;25903:32:42;;;1745:53:34;;;25885:51:42;25972:32;;;25952:18;;;25945:60;26021:18;;;26014:34;;;1718:81:34;;1738:5;;1760:18;;;;;25858::42;;1745:53:34;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1745:53:34;;;;;;;;;;;1718:19;:81::i;1219:160::-;1328:43;;-1:-1:-1;;;;;26251:32:42;;;1328:43:34;;;26233:51:42;26300:18;;;26293:34;;;1301:71:34;;1321:5;;1343:14;;;;;26206:18:42;;1328:43:34;26059:274:42;28940:1062:41;29149:10;29181:1;29143:17;;;:5;:17;;;;;:26;;;-1:-1:-1;;;;;29143:26:41;:40;29139:53;;28940:1062;;;:::o;29139:53::-;-1:-1:-1;;;;;29298:22:41;;29310:10;29298:22;;:48;;-1:-1:-1;;;;;;29324:22:41;;;29298:48;29294:133;;;-1:-1:-1;;29391:5:41;;29368:10;29391:5;29362:17;;;:5;:17;;;;;:26;;:34;;-1:-1:-1;;;;;;29362:34:41;-1:-1:-1;;;;;29391:5:41;;;29362:34;;;;;;-1:-1:-1;28940:1062:41:o;29294:133::-;29486:10;29480:17;;;;:5;:17;;;;;;;;:26;;:37;;-1:-1:-1;;;;;29480:37:41;;-1:-1:-1;;;;;;29480:37:41;;;;;;;;29527:15;;;;;;:31;;;:48;;29480:37;29527:48;;;;;;;;;;;;;;;;;;;;;;;29586:15;;;:43;;;;:58;;29633:11;;29480:17;29586:58;;29633:11;;29586:58;:::i;:::-;;;;-1:-1:-1;29659:22:41;;-1:-1:-1;29672:8:41;29659:12;:22::i;:::-;29655:341;;;29752:7;;29779:3;;29738:21;;29752:7;;;;;29738:11;:21;:::i;:::-;29737:45;;;;:::i;:::-;-1:-1:-1;;;;;29697:15:41;;;;;;:5;:15;;;;;:28;;:86;;:28;;:15;:86;;;;;:::i;:::-;;;;-1:-1:-1;;29903:7:41;;29930:3;;29889:21;;29903:7;;;;;29889:11;:21;:::i;:::-;29888:45;;;;:::i;:::-;-1:-1:-1;;;;;29848:15:41;;;;;;:5;:15;;;;;:28;;:86;;:28;;:15;:86;;;;;:::i;:::-;;;;-1:-1:-1;;28940:1062:41;;;:::o;30223:644::-;30321:15;:22;30291:27;30358:24;;;30354:61;;30398:7;30223:644;:::o;30354:61::-;30424:24;30490:25;30496:19;30490:3;:25;:::i;:::-;30462:11;;30453:20;;30462:11;;30453:6;:20;:::i;:::-;30452:64;;;;:::i;:::-;30424:93;-1:-1:-1;30532:9:41;30527:334;30551:19;30547:1;:23;30527:334;;;30591:19;30613:15;30629:1;30613:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;30613:18:41;;-1:-1:-1;30649:25:41;30613:18;30649:12;:25::i;:::-;30645:206;;;-1:-1:-1;;;;;30694:18:41;;;;;;:5;:18;;;;;:42;;:62;;30740:16;;30694:18;:62;;30740:16;;30694:62;:::i;:::-;;;;-1:-1:-1;;;;;;;30774:18:41;;;;;;:5;:18;;;;;:42;;:62;;30820:16;;30774:18;:62;;30820:16;;30774:62;:::i;:::-;;;;-1:-1:-1;;30645:206:41;-1:-1:-1;30572:3:41;;30527:334;;1809:162:1;1932:7;;-1:-1:-1;;;;;1932:7:1;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:1;;26540:2:42;1910:56:1;;;26522:21:42;26579:2;26559:18;;;26552:30;-1:-1:-1;;;26598:18:42;;;26591:52;26660:18;;1910:56:1;26338:346:42;1536:239:1;1655:10;-1:-1:-1;;;;;1649:16:1;;;1641:52;;;;-1:-1:-1;;;1641:52:1;;26891:2:42;1641:52:1;;;26873:21:42;26930:2;26910:18;;;26903:30;26969:25;26949:18;;;26942:53;27012:18;;1641:52:1;26689:347:42;1641:52:1;1700:14;:19;;-1:-1:-1;;;;;;1700:19:1;-1:-1:-1;;;;;1700:19:1;;;;;;;;;-1:-1:-1;1758:7:1;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:1;1536:239;:::o;8370:720:34:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:34;8910:8;8866:16;;-1:-1:-1;8942:15:34;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:34;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:34;;-1:-1:-1;;;;;13169:32:42;;9033:40:34;;;13151:51:42;13124:18;;9033:40:34;13005:203:42;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:173:42;82:20;;-1:-1:-1;;;;;131:31:42;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:42:o;742:152::-;819:20;;868:1;858:12;;848:40;;884:1;881;874:12;899:212;975:6;1028:2;1016:9;1007:7;1003:23;999:32;996:52;;;1044:1;1041;1034:12;996:52;1067:38;1095:9;1067:38;:::i;1440:226::-;1499:6;1552:2;1540:9;1531:7;1527:23;1523:32;1520:52;;;1568:1;1565;1558:12;1520:52;-1:-1:-1;1613:23:42;;1440:226;-1:-1:-1;1440:226:42:o;1671:127::-;1732:10;1727:3;1723:20;1720:1;1713:31;1763:4;1760:1;1753:15;1787:4;1784:1;1777:15;1803:239;1886:1;1879:5;1876:12;1866:143;;1931:10;1926:3;1922:20;1919:1;1912:31;1966:4;1963:1;1956:15;1994:4;1991:1;1984:15;1866:143;2018:18;;1803:239::o;2047:1027::-;2507:25;;;2563:2;2548:18;;2541:34;;;2606:2;2591:18;;2584:34;;;2494:3;2479:19;;2627:55;2678:2;2663:18;;2655:6;2627:55;:::i;:::-;2713:3;2698:19;;2691:35;;;;2757:3;2742:19;;2735:35;;;;2801:3;2786:19;;2779:35;;;;2845:3;2830:19;;2823:35;;;;2902:14;;2895:22;2889:3;2874:19;;2867:51;2962:14;2955:22;2949:3;2934:19;;2927:51;3009:3;2994:19;;2987:36;3054:3;3039:19;;;3032:36;2047:1027;;-1:-1:-1;;;;2047:1027:42:o;3188:446::-;3241:3;3279:5;3273:12;3306:6;3301:3;3294:19;3338:4;3333:3;3329:14;3322:21;;3377:4;3370:5;3366:16;3400:1;3410:199;3424:6;3421:1;3418:13;3410:199;;;3489:13;;-1:-1:-1;;;;;3485:39:42;3473:52;;3554:4;3545:14;;;;3582:17;;;;3521:1;3439:9;3410:199;;;-1:-1:-1;3625:3:42;;3188:446;-1:-1:-1;;;;3188:446:42:o;3639:321::-;3723:5;3717:12;3712:3;3705:25;3779:4;3772:5;3768:16;3762:23;3755:4;3750:3;3746:14;3739:47;3835:4;3828:5;3824:16;3818:23;3811:4;3806:3;3802:14;3795:47;3891:4;3884:5;3880:16;3874:23;3867:4;3862:3;3858:14;3851:47;3947:4;3940:5;3936:16;3930:23;3923:4;3918:3;3914:14;3907:47;;;3639:321::o;4183:1132::-;4358:2;4347:9;4340:21;4403:6;4397:13;4392:2;4381:9;4377:18;4370:41;4465:2;4457:6;4453:15;4447:22;4442:2;4431:9;4427:18;4420:50;4524:2;4516:6;4512:15;4506:22;4501:2;4490:9;4486:18;4479:50;4584:2;4576:6;4572:15;4566:22;4560:3;4549:9;4545:19;4538:51;4321:4;4636:3;4628:6;4624:16;4618:23;4650:53;4698:3;4687:9;4683:19;4669:12;-1:-1:-1;;;;;3145:31:42;3133:44;;3079:104;4650:53;;4752:3;4744:6;4740:16;4734:23;4794:6;4788:3;4777:9;4773:19;4766:35;4824:65;4884:3;4873:9;4869:19;4853:14;4824:65;:::i;:::-;4810:79;;4938:3;4930:6;4926:16;4920:23;4952:67;5014:3;5003:9;4999:19;4983:14;4952:67;:::i;:::-;;5068:3;5060:6;5056:16;5050:23;5082:67;5144:3;5133:9;5129:19;5113:14;5082:67;:::i;:::-;-1:-1:-1;5198:6:42;5186:19;;5180:26;4047:12;;5281:3;5266:19;;4035:25;4109:4;4098:16;;4092:23;4076:14;;;4069:47;4165:4;4154:16;;4148:23;4132:14;;;4125:47;-1:-1:-1;5303:6:42;4183:1132;-1:-1:-1;;;4183:1132:42:o;5320:724::-;5415:6;5423;5431;5484:2;5472:9;5463:7;5459:23;5455:32;5452:52;;;5500:1;5497;5490:12;5452:52;5545:23;;;-1:-1:-1;5643:2:42;5628:18;;5615:32;5670:18;5659:30;;5656:50;;;5702:1;5699;5692:12;5656:50;5725:22;;5778:4;5770:13;;5766:27;-1:-1:-1;5756:55:42;;5807:1;5804;5797:12;5756:55;5847:2;5834:16;5873:18;5865:6;5862:30;5859:50;;;5905:1;5902;5895:12;5859:50;5958:7;5953:2;5943:6;5940:1;5936:14;5932:2;5928:23;5924:32;5921:45;5918:65;;;5979:1;5976;5969:12;5918:65;5320:724;;6010:2;6002:11;;;;;-1:-1:-1;6032:6:42;;-1:-1:-1;;;5320:724:42:o;6049:403::-;6153:5;6176:1;6186:260;6200:4;6197:1;6194:11;6186:260;;;6257:13;;6295:9;;6283:22;;6355:4;6347:13;;;6341:20;6325:14;;;6318:44;6391:4;6382:14;;;;6419:17;;;;6220:1;6213:9;6186:260;;6457:641;6516:3;6554:5;6548:12;6581:6;6576:3;6569:19;6613:4;6608:3;6604:14;6597:21;;6652:4;6645:5;6641:16;6675:1;6685:388;6699:6;6696:1;6693:13;6685:388;;;6758:13;;6800:9;;-1:-1:-1;;;;;6796:35:42;6784:48;;6882:4;6874:13;;;6868:20;6852:14;;;6845:44;6943:4;6935:13;;;6929:20;-1:-1:-1;;;;;;6925:63:42;6909:14;;;6902:87;;;;7018:4;7009:14;;;;7046:17;;;;6828:1;6714:9;6685:388;;7103:429;7154:3;7192:5;7186:12;7219:6;7214:3;7207:19;7251:4;7246:3;7242:14;7235:21;;7290:4;7283:5;7279:16;7313:1;7323:184;7337:6;7334:1;7331:13;7323:184;;;7402:13;;7417:4;7398:24;7386:37;;7452:4;7443:14;;;;7480:17;;;;7359:1;7352:9;7323:184;;7537:432;7589:3;7627:5;7621:12;7654:6;7649:3;7642:19;7686:4;7681:3;7677:14;7670:21;;7725:4;7718:5;7714:16;7748:1;7758:186;7772:6;7769:1;7766:13;7758:186;;;7837:13;;7852:6;7833:26;7821:39;;7889:4;7880:14;;;;7917:17;;;;7794:1;7787:9;7758:186;;7974:1857;8165:2;8154:9;8147:21;8210:6;8204:13;8199:2;8188:9;8184:18;8177:41;8272:2;8264:6;8260:15;8254:22;8249:2;8238:9;8234:18;8227:50;8331:2;8323:6;8319:15;8313:22;8308:2;8297:9;8293:18;8286:50;8128:4;8383:2;8375:6;8371:15;8365:22;8396:62;8453:3;8442:9;8438:19;8424:12;8396:62;:::i;:::-;;8513:3;8505:6;8501:16;8495:23;8489:3;8478:9;8474:19;8467:52;8574:3;8566:6;8562:16;8556:23;8550:3;8539:9;8535:19;8528:52;8635:3;8627:6;8623:16;8617:23;8611:3;8600:9;8596:19;8589:52;8690:3;8682:6;8678:16;8672:23;8704:72;8771:3;8760:9;8756:19;8740:14;8704:72;:::i;:::-;-1:-1:-1;8831:3:42;8819:16;;8813:23;8807:3;8792:19;;8785:52;8886:6;8874:19;;8868:26;453:13;446:21;8950:3;8935:19;;434:34;9004:6;8992:19;;8986:26;9049:6;9043:3;9028:19;;9021:35;9079:71;9145:3;9130:19;;8986:26;9079:71;:::i;:::-;9065:85;;9199:6;9191;9187:19;9181:26;9276:2;9272:7;9260:9;9252:6;9248:22;9244:36;9238:3;9227:9;9223:19;9216:65;9304:50;9347:6;9331:14;9304:50;:::i;:::-;9290:64;;;9403:6;9395;9391:19;9385:26;9480:2;9476:7;9464:9;9456:6;9452:22;9448:36;9442:3;9431:9;9427:19;9420:65;9508:51;9552:6;9536:14;9508:51;:::i;:::-;9494:65;;;9608:6;9600;9596:19;9590:26;9625:52;9672:3;9661:9;9657:19;9641:14;453:13;446:21;434:34;;383:91;9625:52;-1:-1:-1;9732:3:42;9720:16;;9714:23;9708:3;9693:19;;9686:52;9796:3;9784:16;;;9778:23;9769:6;9754:22;;;9747:55;;;;-1:-1:-1;9819:6:42;7974:1857::o;9836:127::-;9897:10;9892:3;9888:20;9885:1;9878:31;9928:4;9925:1;9918:15;9952:4;9949:1;9942:15;9968:275;10039:2;10033:9;10104:2;10085:13;;-1:-1:-1;;10081:27:42;10069:40;;10139:18;10124:34;;10160:22;;;10121:62;10118:88;;;10186:18;;:::i;:::-;10222:2;10215:22;9968:275;;-1:-1:-1;9968:275:42:o;10248:720::-;10298:5;10351:3;10344:4;10336:6;10332:17;10328:27;10318:55;;10369:1;10366;10359:12;10318:55;10422:2;10416:9;10464:2;10452:15;;10497:18;10482:34;;10518:22;;;10479:62;10476:88;;;10544:18;;:::i;:::-;10580:2;10573:22;10615:6;10656:2;10644:15;;10671;;;10668:35;;;10699:1;10696;10689:12;10668:35;10723:6;10738:200;10754:6;10749:3;10746:15;10738:200;;;10846:17;;10876:18;;10923:4;10914:14;;;;10771;10738:200;;;-1:-1:-1;10956:6:42;;10248:720;-1:-1:-1;;;;;10248:720:42:o;10973:793::-;11140:6;11148;11156;11164;11172;11180;11233:3;11221:9;11212:7;11208:23;11204:33;11201:53;;;11250:1;11247;11240:12;11201:53;11273:38;11301:9;11273:38;:::i;:::-;11263:48;-1:-1:-1;11380:2:42;11365:18;;11352:32;;-1:-1:-1;11481:2:42;11466:18;;11453:32;;-1:-1:-1;11530:53:42;11575:7;11570:2;11555:18;;11530:53;:::i;:::-;11520:63;;11602:54;11648:7;11642:3;11631:9;11627:19;11602:54;:::i;:::-;10973:793;;;;-1:-1:-1;10973:793:42;;;;;11729:3;11714:19;;;11701:33;;-1:-1:-1;;10973:793:42:o;12145:855::-;12377:4;12425:2;12414:9;12410:18;12455:6;12444:9;12437:25;12498:2;12493;12482:9;12478:18;12471:30;12521:6;12556;12550:13;12587:6;12579;12572:22;12625:2;12614:9;12610:18;12603:25;;12663:2;12655:6;12651:15;12637:29;;12684:1;12694:280;12708:6;12705:1;12702:13;12694:280;;;12767:13;;12809:9;;-1:-1:-1;;;;;12805:35:42;12793:48;;12889:2;12881:11;;;12875:18;12861:12;;;12854:40;12949:15;;;;12923:2;12914:12;;;;12837:1;12723:9;12694:280;;;-1:-1:-1;12991:3:42;;12145:855;-1:-1:-1;;;;;;12145:855:42:o;13213:906::-;13481:2;13493:21;;;13563:13;;13466:18;;;13585:22;;;13433:4;;13676;13664:17;;;13638:2;13623:18;;;13433:4;13709:339;13723:6;13720:1;13717:13;13709:339;;;13782:13;;13824:9;;-1:-1:-1;;;;;13820:35:42;13808:48;;13906:4;13898:13;;;13892:20;13876:14;;;13869:44;13961:2;13953:11;;;13947:18;13933:12;;;13926:40;;;;14021:17;;;;13995:2;13986:12;;;;13852:1;13738:9;13709:339;;;-1:-1:-1;;14099:4:42;14084:20;;;;14077:36;;;;-1:-1:-1;14065:3:42;13213:906;-1:-1:-1;;13213:906:42:o;14124:1234::-;14477:3;14490:22;;;14561:13;;14462:19;;;14583:22;;;14429:4;;14675;14663:17;;;14636:3;14621:19;;;14429:4;14708:468;14722:6;14719:1;14716:13;14708:468;;;14781:13;;14823:9;;14834:6;14819:22;14807:35;;14896:4;14888:13;;;14882:20;-1:-1:-1;;;;;;14878:63:42;14862:14;;;14855:87;14996:4;14988:13;;;14982:20;-1:-1:-1;;;;;14978:46:42;14962:14;;;14955:70;15079:4;15071:13;;;15065:20;15087:4;15061:31;15045:14;;;15038:55;;;;15149:17;;;;15122:3;15113:13;;;;15021:1;14737:9;14708:468;;;14712:3;;15193;15185:11;;;;15234:6;15227:4;15216:9;15212:20;15205:36;15279:6;15272:4;15261:9;15257:20;15250:36;15295:57;15346:4;15335:9;15331:20;15323:6;15295:57;:::i;:::-;14124:1234;;;;;;;:::o;15600:985::-;16147:25;;;16203:2;16188:18;;16181:34;;;16246:2;16231:18;;16224:34;;;16289:2;16274:18;;16267:34;;;-1:-1:-1;;;;;16338:32:42;;16332:3;16317:19;;16310:61;16134:3;16119:19;;16380:59;16358:3;16419:19;;16411:6;16380:59;:::i;:::-;16448;16502:3;16491:9;16487:19;16479:6;16448:59;:::i;:::-;4047:12;;16574:3;16559:19;;4035:25;4109:4;4098:16;;4092:23;4076:14;;;4069:47;4165:4;4154:16;;4148:23;4132:14;;;4125:47;15600:985;;;;;;;;;;;:::o;16590:1384::-;16701:6;16709;16717;16725;16778:3;16766:9;16757:7;16753:23;16749:33;16746:53;;;16795:1;16792;16785:12;16746:53;16840:23;;;-1:-1:-1;16960:2:42;16945:18;;16932:32;;-1:-1:-1;17009:38:42;17043:2;17028:18;;17009:38;:::i;:::-;16999:48;;17098:2;17087:9;17083:18;17070:32;17125:18;17117:6;17114:30;17111:50;;;17157:1;17154;17147:12;17111:50;17180:22;;17233:4;17225:13;;17221:27;-1:-1:-1;17211:55:42;;17262:1;17259;17252:12;17211:55;17302:2;17289:16;17328:18;17320:6;17317:30;17314:56;;;17350:18;;:::i;:::-;17396:6;17393:1;17389:14;17423:28;17447:2;17443;17439:11;17423:28;:::i;:::-;17485:19;;;17529:2;17559:11;;;17555:20;;;17520:12;;;;17587:19;;;17584:39;;;17619:1;17616;17609:12;17584:39;17651:2;17647;17643:11;17632:22;;17663:281;17679:6;17674:3;17671:15;17663:281;;;17748:17;;;-1:-1:-1;;;;;;;17800:50:42;;17788:63;;17778:91;;17865:1;17862;17855:12;17778:91;17882:20;;;17931:2;17696:12;;;;17922;;;;17663:281;;;16590:1384;;;;-1:-1:-1;16590:1384:42;;-1:-1:-1;;;;;;16590:1384:42:o;17979:127::-;18040:10;18035:3;18031:20;18028:1;18021:31;18071:4;18068:1;18061:15;18095:4;18092:1;18085:15;18111:128;18178:9;;;18199:11;;;18196:37;;;18213:18;;:::i;:::-;18111:128;;;;:::o;18244:127::-;18305:10;18300:3;18296:20;18293:1;18286:31;18336:4;18333:1;18326:15;18360:4;18357:1;18350:15;18376:136;18415:3;18443:5;18433:39;;18452:18;;:::i;:::-;-1:-1:-1;;;18488:18:42;;18376:136::o;18517:341::-;18719:2;18701:21;;;18758:2;18738:18;;;18731:30;-1:-1:-1;;;18792:2:42;18777:18;;18770:47;18849:2;18834:18;;18517:341::o;19926:125::-;19991:9;;;20012:10;;;20009:36;;;20025:18;;:::i;20459:135::-;20498:3;20519:17;;;20516:43;;20539:18;;:::i;:::-;-1:-1:-1;20586:1:42;20575:13;;20459:135::o;20599:168::-;20672:9;;;20703;;20720:15;;;20714:22;;20700:37;20690:71;;20741:18;;:::i;20969:915::-;21168:2;21157:9;21150:21;21213:6;21207:13;21202:2;21191:9;21187:18;21180:41;21275:2;21267:6;21263:15;21257:22;21252:2;21241:9;21237:18;21230:50;21344:6;21338:2;21330:6;21326:15;21320:22;21316:35;21311:2;21300:9;21296:18;21289:63;21417:10;21411:2;21403:6;21399:15;21393:22;21389:39;21383:3;21372:9;21368:19;21361:68;21495:10;21488:3;21480:6;21476:16;21470:23;21466:40;21460:3;21449:9;21445:19;21438:69;21131:4;21554:3;21546:6;21542:16;21536:23;21597:4;21590;21579:9;21575:20;21568:34;21631:12;21625:19;21681:6;21675:3;21664:9;21660:19;21653:35;21747:6;21742:2;21728:12;21724:21;21718:3;21707:9;21703:19;21697:57;21804:1;21798:3;21789:6;21778:9;21774:22;21770:32;21763:43;21874:3;21867:2;21863:7;21858:2;21850:6;21846:15;21842:29;21831:9;21827:45;21823:55;21815:63;;;;20969:915;;;;:::o;21889:184::-;21959:6;22012:2;22000:9;21991:7;21987:23;21983:32;21980:52;;;22028:1;22025;22018:12;21980:52;-1:-1:-1;22051:16:42;;21889:184;-1:-1:-1;21889:184:42:o;22432:127::-;22493:10;22488:3;22484:20;22481:1;22474:31;22524:4;22521:1;22514:15;22548:4;22545:1;22538:15;22564:120;22604:1;22630;22620:35;;22635:18;;:::i;:::-;-1:-1:-1;22669:9:42;;22564:120::o;22689:112::-;22721:1;22747;22737:35;;22752:18;;:::i;:::-;-1:-1:-1;22786:9:42;;22689:112::o;22806:148::-;22894:4;22873:12;;;22887;;;22869:31;;22912:13;;22909:39;;;22928:18;;:::i;23276:175::-;23313:3;23357:4;23350:5;23346:16;23386:4;23377:7;23374:17;23371:43;;23394:18;;:::i;:::-;23443:1;23430:15;;23276:175;-1:-1:-1;;23276:175:42:o;24168:151::-;24258:4;24251:12;;;24237;;;24233:31;;24276:14;;24273:40;;;24293:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "38460": [{ "start": 5707, "length": 32 }],
      "38462": [{ "start": 5672, "length": 32 }],
      "38464": [{ "start": 5760, "length": 32 }]
    }
  },
  "methodIdentifiers": {
    "Draw(uint256)": "3fd10e0b",
    "GetLatestLottery(uint8)": "7decf333",
    "GetLatestLotteryTicketRoundCustomerCount(uint8)": "0a66d299",
    "GetLotteryById(uint256)": "2a0217d3",
    "GetLotteryCount()": "4450a45f",
    "GetPremiumAccount(address)": "149733ec",
    "PerformDraw()": "581ce0b8",
    "WithDrawRewardBaalance()": "8c76d752",
    "acceptOwnership()": "79ba5097",
    "addPremiumAccount(address)": "a3957193",
    "addPremiumAccountWithReferral(address)": "5ec8a3de",
    "chainLinkRandomWords(uint256)": "5189a0bf",
    "changeOperator(address)": "06394c9b",
    "createLottery(uint8,uint256,uint256,uint256[3],uint256[3],uint256)": "3acab27a",
    "distributeTopBuyersAmounts()": "82d23be9",
    "getLotteryWinningAmountByUser(address)": "9640bcd1",
    "getOwnerBalance()": "590791f2",
    "getPremiumReserve()": "5445bfb9",
    "getPremiumRewardBalance(address)": "035b3be2",
    "getTopBuyerList()": "760a23f1",
    "getUser(address)": "6f77926b",
    "getWinnersList(uint256)": "83a2a432",
    "isActiveUser(address)": "4202d214",
    "lotteries(uint256)": "1398e076",
    "owner()": "8da5cb5b",
    "premiumUserList(uint256)": "5bdff9a4",
    "purchaseTicket(uint256,uint256,address,bytes12[])": "d3577a42",
    "rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
    "removePremiumAccount(address)": "b5827622",
    "s_vrfCoordinator()": "9eccacf6",
    "setCoordinator(address)": "8ea98117",
    "topBuyerAmount()": "9a1fa0fe",
    "transferOwnership(address)": "f2fde38b",
    "usdtToken()": "a98ad46c",
    "users(address)": "a87430ba",
    "withdrawAmountByOwner(uint256)": "e80c4c58",
    "withdrawOwnerPersonalBalance()": "ac19fba7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Lottery__InvalidTicketStringsLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lottery__IsActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"Lottery__NotEnoughTicketPurchases\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lottery__OnlyOperatorCanCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lottery__OnlyOwnerCanCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lottery__SoldOut\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lottery__failedToGenerateRandomNumbers\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lottery__notActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lottery__notEnoughMoney\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"Lottery__notFound\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"enum Lottery.LotteryType\",\"name\":\"lotteryType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winnerCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.WinnerPrize[3]\",\"name\":\"prizesAndWinners\",\"type\":\"tuple[3]\"},{\"internalType\":\"uint256\",\"name\":\"totalWinners\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes12\",\"name\":\"ticketString\",\"type\":\"bytes12\"}],\"internalType\":\"struct Lottery.Ticket[]\",\"name\":\"tickets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8[]\",\"name\":\"winners\",\"type\":\"uint8[]\"},{\"internalType\":\"uint16[]\",\"name\":\"winningTicketNumbers\",\"type\":\"uint16[]\"},{\"internalType\":\"bool\",\"name\":\"isDistributed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalticketPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uniqeUserCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.LotteryRound\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"Lottery__otherLotteryIsActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Premium__UserAlreadyExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Premium__UserDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"withdrawAmount__NotEnoughMoney\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"withdrawAmount__failed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Lottery_Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"Lottery_RequestForWinners\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Lottery_WinnersSelected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Premium__UserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Premium__UserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"}],\"name\":\"REFFERELS__Added\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Ticket__Purchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"name\":\"WiinerAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstLottery\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTicketPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchaseTicketCost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"directReferress\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumReferralTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.totalEarning\",\"name\":\"totalEarning\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumReferralTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.AvaileableUserTax\",\"name\":\"availableTax\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"topBuyerTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refTickets\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.PurchasedTickets\",\"name\":\"purchasedTickets\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct Lottery.User\",\"name\":\"user\",\"type\":\"tuple\"}],\"name\":\"lotteryTestEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmount__SuccessFull\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lotteryId\",\"type\":\"uint256\"}],\"name\":\"Draw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Lottery.LotteryType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"GetLatestLottery\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"enum Lottery.LotteryType\",\"name\":\"lotteryType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winnerCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.WinnerPrize[3]\",\"name\":\"prizesAndWinners\",\"type\":\"tuple[3]\"},{\"internalType\":\"uint256\",\"name\":\"totalWinners\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes12\",\"name\":\"ticketString\",\"type\":\"bytes12\"}],\"internalType\":\"struct Lottery.Ticket[]\",\"name\":\"tickets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8[]\",\"name\":\"winners\",\"type\":\"uint8[]\"},{\"internalType\":\"uint16[]\",\"name\":\"winningTicketNumbers\",\"type\":\"uint16[]\"},{\"internalType\":\"bool\",\"name\":\"isDistributed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalticketPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uniqeUserCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.LotteryRound\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Lottery.LotteryType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"GetLatestLotteryTicketRoundCustomerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customerCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lotteryId\",\"type\":\"uint256\"}],\"name\":\"GetLotteryById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"enum Lottery.LotteryType\",\"name\":\"lotteryType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winnerCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.WinnerPrize[3]\",\"name\":\"prizesAndWinners\",\"type\":\"tuple[3]\"},{\"internalType\":\"uint256\",\"name\":\"totalWinners\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes12\",\"name\":\"ticketString\",\"type\":\"bytes12\"}],\"internalType\":\"struct Lottery.Ticket[]\",\"name\":\"tickets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8[]\",\"name\":\"winners\",\"type\":\"uint8[]\"},{\"internalType\":\"uint16[]\",\"name\":\"winningTicketNumbers\",\"type\":\"uint16[]\"},{\"internalType\":\"bool\",\"name\":\"isDistributed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalticketPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uniqeUserCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.LotteryRound\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetLotteryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"GetPremiumAccount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstLottery\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTicketPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchaseTicketCost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"directReferress\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumReferralTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.totalEarning\",\"name\":\"totalEarning\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumReferralTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.AvaileableUserTax\",\"name\":\"availableTax\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"topBuyerTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refTickets\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.PurchasedTickets\",\"name\":\"purchasedTickets\",\"type\":\"tuple\"}],\"internalType\":\"struct Lottery.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PerformDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithDrawRewardBaalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addPremiumAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"addPremiumAccountWithReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"chainLinkRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"changeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Lottery.LotteryType\",\"name\":\"_type\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_minTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"_prizeAmounts\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256[3]\",\"name\":\"_winnerCounts\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"_totalWinners\",\"type\":\"uint256\"}],\"name\":\"createLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeTopBuyersAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getLotteryWinningAmountByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPremiumReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.PremiumUsers[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPremiumRewardBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTopBuyerList\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ticket\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.Leader[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstLottery\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTicketPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchaseTicketCost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"directReferress\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumReferralTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.totalEarning\",\"name\":\"totalEarning\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumReferralTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.AvaileableUserTax\",\"name\":\"availableTax\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"topBuyerTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refTickets\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.PurchasedTickets\",\"name\":\"purchasedTickets\",\"type\":\"tuple\"}],\"internalType\":\"struct Lottery.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lottteryId\",\"type\":\"uint256\"}],\"name\":\"getWinnersList\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"sl\",\"type\":\"uint16\"},{\"internalType\":\"bytes12\",\"name\":\"ticket\",\"type\":\"bytes12\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"prize\",\"type\":\"uint8\"}],\"internalType\":\"struct Lottery.LotteryResult[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum Lottery.LotteryType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isActiveUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lotteries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"enum Lottery.LotteryType\",\"name\":\"lotteryType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTicketCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWinners\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDistributed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalticketPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uniqeUserCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"premiumUserList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lotteryId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"bytes12[]\",\"name\":\"ticketStrings\",\"type\":\"bytes12[]\"}],\"name\":\"purchaseTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removePremiumAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topBuyerAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstLottery\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTicketPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchaseTicketCost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumReferralTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.totalEarning\",\"name\":\"totalEarning\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumReferralTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.AvaileableUserTax\",\"name\":\"availableTax\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"topBuyerTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"topBuyerCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refTickets\",\"type\":\"uint256\"}],\"internalType\":\"struct Lottery.PurchasedTickets\",\"name\":\"purchasedTickets\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmountByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawOwnerPersonalBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"Draw(uint256)\":{\"details\":\"Requests random numbers from Chainlink VRF. Only callable by the operator.\",\"params\":{\"lotteryId\":\"ID of the lottery to draw winners for\"}},\"GetLatestLottery(uint8)\":{\"details\":\"Reverts if no lottery of the specified type exists.\",\"params\":{\"_type\":\"Type of lottery to retrieve (EASY or SUPER)\"},\"returns\":{\"_0\":\"LotteryRound struct with lottery details\"}},\"GetLatestLotteryTicketRoundCustomerCount(uint8)\":{\"details\":\"Reverts if no lottery of the specified type exists.\",\"params\":{\"_type\":\"Type of lottery to check (EASY or SUPER)\"},\"returns\":{\"customerCount\":\"Unique customer count\",\"round\":\"Lottery round ID\",\"ticketCount\":\"Total tickets sold\"}},\"GetLotteryById(uint256)\":{\"details\":\"Reverts if the lottery ID is invalid.\",\"params\":{\"lotteryId\":\"ID of the lottery to retrieve\"},\"returns\":{\"_0\":\"LotteryRound struct with lottery details\"}},\"GetLotteryCount()\":{\"returns\":{\"_0\":\"uint256 Total lottery count\"}},\"GetPremiumAccount(address)\":{\"details\":\"Reverts if the user is not a premium member.\",\"params\":{\"_user\":\"Address of the user to check\"},\"returns\":{\"_0\":\"User struct with premium account details\"}},\"PerformDraw()\":{\"details\":\"Uses the random numbers to determine winners and distribute prizes. Only callable by the operator.\"},\"WithDrawRewardBaalance()\":{\"details\":\"Combines all reward types and transfer,  10% fee will charged, user will get 90%\"},\"addPremiumAccount(address)\":{\"details\":\"Only callable by the operator. Requires the user to not already be a premium member.\",\"params\":{\"_user\":\"Address of the user to add as premium\"}},\"addPremiumAccountWithReferral(address)\":{\"details\":\"Requires a premium fee of 100 USDT. 10% of the fee is rewarded to the referrer. 90% goes to owner.\",\"params\":{\"referral\":\"Address of the referrer\"}},\"changeOperator(address)\":{\"details\":\"Only callable by the owner\",\"params\":{\"_operator\":\"New operator address\"}},\"constructor\":{\"details\":\"Sets up Chainlink VRF, USDT token, and assigns the owner and operator roles\",\"params\":{\"_usdtToken\":\"Address of the USDT token contract\",\"callbackGasLimit\":\"Gas limit for VRF callback\",\"gasLane\":\"Chainlink gas lane key hash\",\"subscriptionId\":\"Chainlink VRF subscription ID\",\"vrfCoordinatorV2\":\"Chainlink VRF coordinator address\"}},\"createLottery(uint8,uint256,uint256,uint256[3],uint256[3],uint256)\":{\"details\":\"Only callable by operator\",\"params\":{\"_maxTicketCount\":\"Maximum tickets allowed\",\"_minTicketCount\":\"Minimum tickets to start\",\"_prizeAmounts\":\"Array of prize amounts for 5 tiers\",\"_totalWinners\":\"Total number of winners\",\"_type\":\"Lottery type (EASY/SUPER)\",\"_winnerCounts\":\"Array of winner counts for 5 tiers\"}},\"distributeTopBuyersAmounts()\":{\"details\":\"Calculates rewards based on ticket purchases. Resets buyer data after distribution.\"},\"getLotteryWinningAmountByUser(address)\":{\"params\":{\"userAddress\":\"Address of the user to check\"},\"returns\":{\"_0\":\"uint256 Total winning amount for the user\"}},\"getOwnerBalance()\":{\"details\":\"Only callable by the owner.\",\"returns\":{\"_0\":\"uint256 Total owner tax\"}},\"getPremiumReserve()\":{\"returns\":{\"_0\":\"uint256 Total premium reserve\",\"_1\":\"PremiumUsers[] Array of premium users and their balances\"}},\"getPremiumRewardBalance(address)\":{\"details\":\"Reverts if the user is not a premium member.\",\"params\":{\"_user\":\"Address of the user to check\"},\"returns\":{\"_0\":\"uint256 Premium reward balance\",\"_1\":\"bool True if the user is a premium member\"}},\"getTopBuyerList()\":{\"details\":\"Sorts buyers based on their ticket purchase amounts.\",\"returns\":{\"_0\":\"Leader array and total prize pool\"}},\"getWinnersList(uint256)\":{\"params\":{\"lottteryId\":\"ID of the lottery to check\"},\"returns\":{\"_0\":\"LotteryResult[] Array of winner details\",\"_1\":\"uint256 Lottery ID\",\"_2\":\"uint256 Lottery round ID\",\"_3\":\"LotteryType Type of lottery\"}},\"isActiveUser(address)\":{\"details\":\"A user is considered active if they purchased a ticket within the active period.\",\"params\":{\"_user\":\"Address of the user to check\"},\"returns\":{\"_0\":\"bool True if the user is active, false otherwise\"}},\"purchaseTicket(uint256,uint256,address,bytes12[])\":{\"details\":\"Uses ERC20 safeTransferFrom for USDT payments\",\"params\":{\"lotteryId\":\"ID of lottery to participate in\",\"referrer\":\"Referral address (optional)\",\"ticketCount\":\"Number of tickets to buy\",\"ticketStrings\":\"Array of unique ticket hashes\"}},\"removePremiumAccount(address)\":{\"details\":\"Only callable by the operator. Requires the user to be a premium member.\",\"params\":{\"_user\":\"Address of the user to remove\"}},\"withdrawAmountByOwner(uint256)\":{\"details\":\"Only callable by the owner. Ensures the contract has sufficient balance.\",\"params\":{\"_amount\":\"Amount of USDT to withdraw\"}},\"withdrawOwnerPersonalBalance()\":{\"details\":\"Only callable by one of the owners\"}},\"version\":1},\"userdoc\":{\"events\":{\"lotteryTestEvent((uint256,uint256,uint256,uint256,address,address[],(uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256)))\":{\"notice\":\"test event should remove\"}},\"kind\":\"user\",\"methods\":{\"Draw(uint256)\":{\"notice\":\"Initiates the winner selection process for a lottery\"},\"GetLatestLottery(uint8)\":{\"notice\":\"Retrieves the latest lottery of a specific type\"},\"GetLatestLotteryTicketRoundCustomerCount(uint8)\":{\"notice\":\"Retrieves ticket and customer count for the latest lottery of a specific type\"},\"GetLotteryById(uint256)\":{\"notice\":\"Retrieves details of a specific lottery\"},\"GetLotteryCount()\":{\"notice\":\"Retrieves the total number of lotteries created\"},\"GetPremiumAccount(address)\":{\"notice\":\"Retrieves premium account details for a user\"},\"PerformDraw()\":{\"notice\":\"Processes the random numbers and selects winners for the lottery\"},\"WithDrawRewardBaalance()\":{\"notice\":\"Withdraw available rewards for user\"},\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"addPremiumAccount(address)\":{\"notice\":\"Adds a user as a premium account\"},\"addPremiumAccountWithReferral(address)\":{\"notice\":\"Allows a user to become a premium member with a referral\"},\"changeOperator(address)\":{\"notice\":\"Updates the operator address\"},\"constructor\":{\"notice\":\"Initializes the Lottery contract\"},\"createLottery(uint8,uint256,uint256,uint256[3],uint256[3],uint256)\":{\"notice\":\"Create new lottery round\"},\"distributeTopBuyersAmounts()\":{\"notice\":\"Distributes rewards to the top 10 buyers\"},\"getLotteryWinningAmountByUser(address)\":{\"notice\":\"Retrieves the winning amount for a specific user\"},\"getOwnerBalance()\":{\"notice\":\"Retrieves the owner's total balance\"},\"getPremiumReserve()\":{\"notice\":\"Retrieves the total premium reserve and list of premium users\"},\"getPremiumRewardBalance(address)\":{\"notice\":\"Retrieves the premium reward balance for a user\"},\"getTopBuyerList()\":{\"notice\":\"Retrieves the list of top  buyers\"},\"getWinnersList(uint256)\":{\"notice\":\"Retrieves the list of winners for a specific lottery\"},\"isActiveUser(address)\":{\"notice\":\"Checks if a user is active based on their last ticket purchase\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"purchaseTicket(uint256,uint256,address,bytes12[])\":{\"notice\":\"Purchase tickets for specified lottery\"},\"removePremiumAccount(address)\":{\"notice\":\"Removes a user from the premium membership\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"},\"withdrawAmountByOwner(uint256)\":{\"notice\":\"Allows the owner to withdraw a specified amount of USDT\"},\"withdrawOwnerPersonalBalance()\":{\"notice\":\"Allows an owner to withdraw their balance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/LotteryLatest.sol\":\"Lottery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solmate/=lib/solmate/src/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"src/LotteryLatest.sol\":{\"keccak256\":\"0xb888ffdbbdfe3d9986bd94950fd1b4b09ba38d719af596eb1d32d3c2fce3a782\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f404e06947c7a4772cb118aef2a34fc6dc50ad03da9e79596698f537d4164fb6\",\"dweb:/ipfs/QmZpN5KZKKieecShPx42PwRMKqYHq2KdoQGH9ejgDENHXQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "subscriptionId",
              "type": "uint256"
            },
            { "internalType": "bytes32", "name": "gasLane", "type": "bytes32" },
            {
              "internalType": "uint32",
              "name": "callbackGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "vrfCoordinatorV2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_usdtToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Lottery__InvalidTicketStringsLength"
        },
        { "inputs": [], "type": "error", "name": "Lottery__IsActive" },
        {
          "inputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ],
          "type": "error",
          "name": "Lottery__NotEnoughTicketPurchases"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Lottery__OnlyOperatorCanCall"
        },
        { "inputs": [], "type": "error", "name": "Lottery__OnlyOwnerCanCall" },
        { "inputs": [], "type": "error", "name": "Lottery__SoldOut" },
        {
          "inputs": [],
          "type": "error",
          "name": "Lottery__failedToGenerateRandomNumbers"
        },
        { "inputs": [], "type": "error", "name": "Lottery__notActive" },
        { "inputs": [], "type": "error", "name": "Lottery__notEnoughMoney" },
        {
          "inputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ],
          "type": "error",
          "name": "Lottery__notFound"
        },
        {
          "inputs": [
            {
              "internalType": "struct Lottery.LotteryRound",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Lottery.LotteryType",
                  "name": "lotteryType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "minTicketCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTicketCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "ticketPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Lottery.WinnerPrize[3]",
                  "name": "prizesAndWinners",
                  "type": "tuple[3]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "prizeAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winnerCount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "totalWinners",
                  "type": "uint256"
                },
                { "internalType": "bool", "name": "isActive", "type": "bool" },
                {
                  "internalType": "struct Lottery.Ticket[]",
                  "name": "tickets",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "customer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes12",
                      "name": "ticketString",
                      "type": "bytes12"
                    }
                  ]
                },
                {
                  "internalType": "uint8[]",
                  "name": "winners",
                  "type": "uint8[]"
                },
                {
                  "internalType": "uint16[]",
                  "name": "winningTicketNumbers",
                  "type": "uint16[]"
                },
                {
                  "internalType": "bool",
                  "name": "isDistributed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "totalticketPurchased",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "uniqeUserCount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "type": "error",
          "name": "Lottery__otherLotteryIsActive"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "have", "type": "address" },
            { "internalType": "address", "name": "want", "type": "address" }
          ],
          "type": "error",
          "name": "OnlyCoordinatorCanFulfill"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "have", "type": "address" },
            { "internalType": "address", "name": "owner", "type": "address" },
            {
              "internalType": "address",
              "name": "coordinator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OnlyOwnerOrCoordinator"
        },
        { "inputs": [], "type": "error", "name": "Premium__UserAlreadyExist" },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "type": "error",
          "name": "Premium__UserDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        { "inputs": [], "type": "error", "name": "ZeroAddress" },
        {
          "inputs": [],
          "type": "error",
          "name": "withdrawAmount__NotEnoughMoney"
        },
        { "inputs": [], "type": "error", "name": "withdrawAmount__failed" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vrfCoordinator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CoordinatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Lottery_Created",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Lottery_RequestForWinners",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Lottery_WinnersSelected",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Premium__UserAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Premium__UserRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referee",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "REFFERELS__Added",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Ticket__Purchased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[][]",
              "name": "",
              "type": "uint256[][]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WiinerAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct Lottery.User",
              "name": "user",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "premium",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstLottery",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastTicketPurchased",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalPurchaseTicketCost",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "directReferress",
                  "type": "address[]"
                },
                {
                  "internalType": "struct Lottery.totalEarning",
                  "name": "totalEarning",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "refTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumReferralTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "topBuyerTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winningAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Lottery.AvaileableUserTax",
                  "name": "availableTax",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "refTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumReferralTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "topBuyerTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winningAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Lottery.PurchasedTickets",
                  "name": "purchasedTickets",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "topBuyerTickets",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "topBuyerCost",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "refTickets",
                      "type": "uint256"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "lotteryTestEvent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "withdrawAmount__SuccessFull",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lotteryId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "Draw"
        },
        {
          "inputs": [
            {
              "internalType": "enum Lottery.LotteryType",
              "name": "_type",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "GetLatestLottery",
          "outputs": [
            {
              "internalType": "struct Lottery.LotteryRound",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Lottery.LotteryType",
                  "name": "lotteryType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "minTicketCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTicketCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "ticketPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Lottery.WinnerPrize[3]",
                  "name": "prizesAndWinners",
                  "type": "tuple[3]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "prizeAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winnerCount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "totalWinners",
                  "type": "uint256"
                },
                { "internalType": "bool", "name": "isActive", "type": "bool" },
                {
                  "internalType": "struct Lottery.Ticket[]",
                  "name": "tickets",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "customer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes12",
                      "name": "ticketString",
                      "type": "bytes12"
                    }
                  ]
                },
                {
                  "internalType": "uint8[]",
                  "name": "winners",
                  "type": "uint8[]"
                },
                {
                  "internalType": "uint16[]",
                  "name": "winningTicketNumbers",
                  "type": "uint16[]"
                },
                {
                  "internalType": "bool",
                  "name": "isDistributed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "totalticketPurchased",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "uniqeUserCount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum Lottery.LotteryType",
              "name": "_type",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "GetLatestLotteryTicketRoundCustomerCount",
          "outputs": [
            { "internalType": "uint256", "name": "round", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "ticketCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "customerCount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lotteryId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "GetLotteryById",
          "outputs": [
            {
              "internalType": "struct Lottery.LotteryRound",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Lottery.LotteryType",
                  "name": "lotteryType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "minTicketCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTicketCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "ticketPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Lottery.WinnerPrize[3]",
                  "name": "prizesAndWinners",
                  "type": "tuple[3]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "prizeAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winnerCount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "totalWinners",
                  "type": "uint256"
                },
                { "internalType": "bool", "name": "isActive", "type": "bool" },
                {
                  "internalType": "struct Lottery.Ticket[]",
                  "name": "tickets",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "customer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes12",
                      "name": "ticketString",
                      "type": "bytes12"
                    }
                  ]
                },
                {
                  "internalType": "uint8[]",
                  "name": "winners",
                  "type": "uint8[]"
                },
                {
                  "internalType": "uint16[]",
                  "name": "winningTicketNumbers",
                  "type": "uint16[]"
                },
                {
                  "internalType": "bool",
                  "name": "isDistributed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "totalticketPurchased",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "uniqeUserCount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GetLotteryCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "GetPremiumAccount",
          "outputs": [
            {
              "internalType": "struct Lottery.User",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "premium",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstLottery",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastTicketPurchased",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalPurchaseTicketCost",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "directReferress",
                  "type": "address[]"
                },
                {
                  "internalType": "struct Lottery.totalEarning",
                  "name": "totalEarning",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "refTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumReferralTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "topBuyerTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winningAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Lottery.AvaileableUserTax",
                  "name": "availableTax",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "refTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumReferralTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "topBuyerTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winningAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Lottery.PurchasedTickets",
                  "name": "purchasedTickets",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "topBuyerTickets",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "topBuyerCost",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "refTickets",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "PerformDraw"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "WithDrawRewardBaalance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPremiumAccount"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "referral", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPremiumAccountWithReferral"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "chainLinkRandomWords",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "enum Lottery.LotteryType",
              "name": "_type",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_minTicketCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxTicketCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[3]",
              "name": "_prizeAmounts",
              "type": "uint256[3]"
            },
            {
              "internalType": "uint256[3]",
              "name": "_winnerCounts",
              "type": "uint256[3]"
            },
            {
              "internalType": "uint256",
              "name": "_totalWinners",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createLottery"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distributeTopBuyersAmounts"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLotteryWinningAmountByUser",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOwnerBalance",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPremiumReserve",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            {
              "internalType": "struct Lottery.PremiumUsers[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPremiumRewardBalance",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "bool", "name": "", "type": "bool" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTopBuyerList",
          "outputs": [
            {
              "internalType": "struct Lottery.Leader[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ticket",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUser",
          "outputs": [
            {
              "internalType": "struct Lottery.User",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "premium",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstLottery",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastTicketPurchased",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalPurchaseTicketCost",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "directReferress",
                  "type": "address[]"
                },
                {
                  "internalType": "struct Lottery.totalEarning",
                  "name": "totalEarning",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "refTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumReferralTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "topBuyerTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winningAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Lottery.AvaileableUserTax",
                  "name": "availableTax",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "refTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "premiumReferralTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "topBuyerTax",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winningAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Lottery.PurchasedTickets",
                  "name": "purchasedTickets",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "topBuyerTickets",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "topBuyerCost",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "refTickets",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lottteryId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWinnersList",
          "outputs": [
            {
              "internalType": "struct Lottery.LotteryResult[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint16", "name": "sl", "type": "uint16" },
                {
                  "internalType": "bytes12",
                  "name": "ticket",
                  "type": "bytes12"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                { "internalType": "uint8", "name": "prize", "type": "uint8" }
              ]
            },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            {
              "internalType": "enum Lottery.LotteryType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isActiveUser",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotteries",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "roundId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "enum Lottery.LotteryType",
              "name": "lotteryType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "minTicketCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxTicketCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalWinners",
              "type": "uint256"
            },
            { "internalType": "bool", "name": "isActive", "type": "bool" },
            { "internalType": "bool", "name": "isDistributed", "type": "bool" },
            {
              "internalType": "uint256",
              "name": "totalticketPurchased",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "uniqeUserCount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "premiumUserList",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lotteryId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketCount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            },
            {
              "internalType": "bytes12[]",
              "name": "ticketStrings",
              "type": "bytes12[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchaseTicket"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "randomWords",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rawFulfillRandomWords"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removePremiumAccount"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_vrfCoordinator",
          "outputs": [
            {
              "internalType": "contract IVRFCoordinatorV2Plus",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vrfCoordinator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCoordinator"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "topBuyerAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "usdtToken",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "users",
          "outputs": [
            { "internalType": "uint256", "name": "premium", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "firstLottery",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastTicketPurchased",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalPurchaseTicketCost",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            },
            {
              "internalType": "struct Lottery.totalEarning",
              "name": "totalEarning",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "refTax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumTax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumReferralTax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "topBuyerTax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "winningAmount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Lottery.AvaileableUserTax",
              "name": "availableTax",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "refTax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumTax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumReferralTax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "topBuyerTax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "winningAmount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Lottery.PurchasedTickets",
              "name": "purchasedTickets",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "topBuyerTickets",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "topBuyerCost",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "refTickets",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAmountByOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawOwnerPersonalBalance"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "Draw(uint256)": {
            "details": "Requests random numbers from Chainlink VRF. Only callable by the operator.",
            "params": { "lotteryId": "ID of the lottery to draw winners for" }
          },
          "GetLatestLottery(uint8)": {
            "details": "Reverts if no lottery of the specified type exists.",
            "params": {
              "_type": "Type of lottery to retrieve (EASY or SUPER)"
            },
            "returns": { "_0": "LotteryRound struct with lottery details" }
          },
          "GetLatestLotteryTicketRoundCustomerCount(uint8)": {
            "details": "Reverts if no lottery of the specified type exists.",
            "params": { "_type": "Type of lottery to check (EASY or SUPER)" },
            "returns": {
              "customerCount": "Unique customer count",
              "round": "Lottery round ID",
              "ticketCount": "Total tickets sold"
            }
          },
          "GetLotteryById(uint256)": {
            "details": "Reverts if the lottery ID is invalid.",
            "params": { "lotteryId": "ID of the lottery to retrieve" },
            "returns": { "_0": "LotteryRound struct with lottery details" }
          },
          "GetLotteryCount()": {
            "returns": { "_0": "uint256 Total lottery count" }
          },
          "GetPremiumAccount(address)": {
            "details": "Reverts if the user is not a premium member.",
            "params": { "_user": "Address of the user to check" },
            "returns": { "_0": "User struct with premium account details" }
          },
          "PerformDraw()": {
            "details": "Uses the random numbers to determine winners and distribute prizes. Only callable by the operator."
          },
          "WithDrawRewardBaalance()": {
            "details": "Combines all reward types and transfer,  10% fee will charged, user will get 90%"
          },
          "addPremiumAccount(address)": {
            "details": "Only callable by the operator. Requires the user to not already be a premium member.",
            "params": { "_user": "Address of the user to add as premium" }
          },
          "addPremiumAccountWithReferral(address)": {
            "details": "Requires a premium fee of 100 USDT. 10% of the fee is rewarded to the referrer. 90% goes to owner.",
            "params": { "referral": "Address of the referrer" }
          },
          "changeOperator(address)": {
            "details": "Only callable by the owner",
            "params": { "_operator": "New operator address" }
          },
          "constructor": {
            "details": "Sets up Chainlink VRF, USDT token, and assigns the owner and operator roles",
            "params": {
              "_usdtToken": "Address of the USDT token contract",
              "callbackGasLimit": "Gas limit for VRF callback",
              "gasLane": "Chainlink gas lane key hash",
              "subscriptionId": "Chainlink VRF subscription ID",
              "vrfCoordinatorV2": "Chainlink VRF coordinator address"
            }
          },
          "createLottery(uint8,uint256,uint256,uint256[3],uint256[3],uint256)": {
            "details": "Only callable by operator",
            "params": {
              "_maxTicketCount": "Maximum tickets allowed",
              "_minTicketCount": "Minimum tickets to start",
              "_prizeAmounts": "Array of prize amounts for 5 tiers",
              "_totalWinners": "Total number of winners",
              "_type": "Lottery type (EASY/SUPER)",
              "_winnerCounts": "Array of winner counts for 5 tiers"
            }
          },
          "distributeTopBuyersAmounts()": {
            "details": "Calculates rewards based on ticket purchases. Resets buyer data after distribution."
          },
          "getLotteryWinningAmountByUser(address)": {
            "params": { "userAddress": "Address of the user to check" },
            "returns": { "_0": "uint256 Total winning amount for the user" }
          },
          "getOwnerBalance()": {
            "details": "Only callable by the owner.",
            "returns": { "_0": "uint256 Total owner tax" }
          },
          "getPremiumReserve()": {
            "returns": {
              "_0": "uint256 Total premium reserve",
              "_1": "PremiumUsers[] Array of premium users and their balances"
            }
          },
          "getPremiumRewardBalance(address)": {
            "details": "Reverts if the user is not a premium member.",
            "params": { "_user": "Address of the user to check" },
            "returns": {
              "_0": "uint256 Premium reward balance",
              "_1": "bool True if the user is a premium member"
            }
          },
          "getTopBuyerList()": {
            "details": "Sorts buyers based on their ticket purchase amounts.",
            "returns": { "_0": "Leader array and total prize pool" }
          },
          "getWinnersList(uint256)": {
            "params": { "lottteryId": "ID of the lottery to check" },
            "returns": {
              "_0": "LotteryResult[] Array of winner details",
              "_1": "uint256 Lottery ID",
              "_2": "uint256 Lottery round ID",
              "_3": "LotteryType Type of lottery"
            }
          },
          "isActiveUser(address)": {
            "details": "A user is considered active if they purchased a ticket within the active period.",
            "params": { "_user": "Address of the user to check" },
            "returns": {
              "_0": "bool True if the user is active, false otherwise"
            }
          },
          "purchaseTicket(uint256,uint256,address,bytes12[])": {
            "details": "Uses ERC20 safeTransferFrom for USDT payments",
            "params": {
              "lotteryId": "ID of lottery to participate in",
              "referrer": "Referral address (optional)",
              "ticketCount": "Number of tickets to buy",
              "ticketStrings": "Array of unique ticket hashes"
            }
          },
          "removePremiumAccount(address)": {
            "details": "Only callable by the operator. Requires the user to be a premium member.",
            "params": { "_user": "Address of the user to remove" }
          },
          "withdrawAmountByOwner(uint256)": {
            "details": "Only callable by the owner. Ensures the contract has sufficient balance.",
            "params": { "_amount": "Amount of USDT to withdraw" }
          },
          "withdrawOwnerPersonalBalance()": {
            "details": "Only callable by one of the owners"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "Draw(uint256)": {
            "notice": "Initiates the winner selection process for a lottery"
          },
          "GetLatestLottery(uint8)": {
            "notice": "Retrieves the latest lottery of a specific type"
          },
          "GetLatestLotteryTicketRoundCustomerCount(uint8)": {
            "notice": "Retrieves ticket and customer count for the latest lottery of a specific type"
          },
          "GetLotteryById(uint256)": {
            "notice": "Retrieves details of a specific lottery"
          },
          "GetLotteryCount()": {
            "notice": "Retrieves the total number of lotteries created"
          },
          "GetPremiumAccount(address)": {
            "notice": "Retrieves premium account details for a user"
          },
          "PerformDraw()": {
            "notice": "Processes the random numbers and selects winners for the lottery"
          },
          "WithDrawRewardBaalance()": {
            "notice": "Withdraw available rewards for user"
          },
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "addPremiumAccount(address)": {
            "notice": "Adds a user as a premium account"
          },
          "addPremiumAccountWithReferral(address)": {
            "notice": "Allows a user to become a premium member with a referral"
          },
          "changeOperator(address)": {
            "notice": "Updates the operator address"
          },
          "constructor": { "notice": "Initializes the Lottery contract" },
          "createLottery(uint8,uint256,uint256,uint256[3],uint256[3],uint256)": {
            "notice": "Create new lottery round"
          },
          "distributeTopBuyersAmounts()": {
            "notice": "Distributes rewards to the top 10 buyers"
          },
          "getLotteryWinningAmountByUser(address)": {
            "notice": "Retrieves the winning amount for a specific user"
          },
          "getOwnerBalance()": {
            "notice": "Retrieves the owner's total balance"
          },
          "getPremiumReserve()": {
            "notice": "Retrieves the total premium reserve and list of premium users"
          },
          "getPremiumRewardBalance(address)": {
            "notice": "Retrieves the premium reward balance for a user"
          },
          "getTopBuyerList()": {
            "notice": "Retrieves the list of top  buyers"
          },
          "getWinnersList(uint256)": {
            "notice": "Retrieves the list of winners for a specific lottery"
          },
          "isActiveUser(address)": {
            "notice": "Checks if a user is active based on their last ticket purchase"
          },
          "owner()": { "notice": "Get the current owner" },
          "purchaseTicket(uint256,uint256,address,bytes12[])": {
            "notice": "Purchase tickets for specified lottery"
          },
          "removePremiumAccount(address)": {
            "notice": "Removes a user from the premium membership"
          },
          "setCoordinator(address)": {
            "notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address."
          },
          "withdrawAmountByOwner(uint256)": {
            "notice": "Allows the owner to withdraw a specified amount of USDT"
          },
          "withdrawOwnerPersonalBalance()": {
            "notice": "Allows an owner to withdraw their balance"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@solmate/=lib/solmate/src/",
        "chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/",
        "ds-test/=lib/solmate/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "foundry-devops/=lib/foundry-devops/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solmate/=lib/solmate/src/",
        "weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/LotteryLatest.sol": "Lottery" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861",
        "urls": [
          "bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e",
          "dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B"
        ],
        "license": "MIT"
      },
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8",
        "urls": [
          "bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a",
          "dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT"
        ],
        "license": "MIT"
      },
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      },
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
        "keccak256": "0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2",
        "urls": [
          "bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4",
          "dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW"
        ],
        "license": "MIT"
      },
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
        "keccak256": "0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36",
        "urls": [
          "bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e",
          "dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL"
        ],
        "license": "MIT"
      },
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
        "keccak256": "0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85",
        "urls": [
          "bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb",
          "dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js"
        ],
        "license": "MIT"
      },
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
        "keccak256": "0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0",
        "urls": [
          "bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8",
          "dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F"
        ],
        "license": "MIT"
      },
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
        "keccak256": "0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6",
        "urls": [
          "bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d",
          "dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
        "urls": [
          "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
          "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "src/LotteryLatest.sol": {
        "keccak256": "0xb888ffdbbdfe3d9986bd94950fd1b4b09ba38d719af596eb1d32d3c2fce3a782",
        "urls": [
          "bzz-raw://f404e06947c7a4772cb118aef2a34fc6dc50ad03da9e79596698f537d4164fb6",
          "dweb:/ipfs/QmZpN5KZKKieecShPx42PwRMKqYHq2KdoQGH9ejgDENHXQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 41
}
